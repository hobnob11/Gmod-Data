@name LS Spawner V1
#globals
@persist Generators:array First
#generators
@persist WaterSplitter WaterPump HydroStatic Fusion Fusion2

@outputs State
if(first()){
    #include "lib/hob"
    #include "lib/octree_builder"
    
    #Spawns a generator below the player
    function number spawnGenerator(Type:string,Model:string){
        local Index = Generators:count() + 1
        Generators[Index,entity] = noentity()
        local SpawnPlate = propSpawn("models/hunter/plates/plate1x1.mdl",owner():pos()-vec(0,0,400),1)
        setEye(ang(90,0,0))
        local Interval = 400
        local StrDex = "" + Index + Type + Model 
        timer(1*Interval,1,StrDex+"1","concmd(s)","gmod_tool sc_generators")
        timer(2*Interval,1,StrDex+"2","concmd(s)","sc_generators_type Generator")
        timer(3*Interval,1,StrDex+"2","concmd(s)","sc_generators_subtype " + Type)
        timer(4*Interval,1,StrDex+"4","concmd(s)","sc_generators_model " + Model)
        timer(5*Interval,1,StrDex+"5","concmd(s)","+attack")
        timer(6*Interval,1,StrDex+"6","concmd(s)","-attack")
        timer(9*Interval,1,StrDex+"7","propDelete(e:)",SpawnPlate)
        timer(10*Interval,1,StrDex+"8","addGen(n)",Index)
        return Index
    }
    
    #adds the generator to the global table when finished. 
    function addGen(I){
        Generators[I,entity] = rangerOffset(owner():pos(),owner():pos()-vec(0,0,400)):entity()
    }
    
    #checks if the gen func is done yet
    function number genDone(I){
        return Generators[I,entity]:isValid()
    }
    
    #gets the generator
    function entity number:entity(){
        return Generators[This,entity]
    }
    
    State = 1
    First = 1

}
interval(100)
switch(State){
    case 1,
        if(First){
            WaterSplitter = spawnGenerator("Water Splitter","models/hunter/blocks/cube8x8x8.mdl")
            First = 0
        }
        if(genDone(WaterSplitter)){
            WaterSplitter:entity():setPos(entity():pos())
            State = 2
            First = 1
        }
        break

    case 2,
        if(First){
            WaterPump = spawnGenerator("Water Pump","models/hunter/blocks/cube8x8x8.mdl")
            First = 0
        }
        if(genDone(WaterPump)){
            WaterPump:entity():setPos(entity():pos())
            State = 3
            First = 1
        }
        break

    case 3,
        if(First){
            HydroStatic = spawnGenerator("Hydrostatic Generator","models/hunter/blocks/cube8x8x8.mdl")
            First = 0
        }
        if(genDone(HydroStatic)){
            HydroStatic:entity():setPos(entity():pos())
            State = 4
            First = 1
        }
        break
        
    case 4,
        if(First){
            Fusion = spawnGenerator("Fusion Reactor","models/hunter/blocks/cube4x4x4.mdl")
            First = 0
        }
        if(genDone(Fusion)){
            Fusion:entity():setPos(entity():pos())
            State = 5
            First = 1
        }
        break
        
    case 5,
        if(First){
            Fusion2 = spawnGenerator("Fusion Reactor","models/hunter/blocks/cube8x8x8.mdl")
            First = 0
        }
        if(genDone(Fusion2)){
            Fusion2:entity():setPos(entity():pos())
            State = 6
            First = 1
        }
        break
}
