@name Wings
@inputs Fold
@outputs X
@persist A:array [L1 L2 L3 R1 R2 R3]:entity Ready
@trigger 
    interval(50)
if(first()){
    holoCreate(1,entity():isWeldedTo():pos(),vec(1,1,1),entity():isWeldedTo():angles())
    holoAlpha(1,0)
    A = entity():getConstraints()
    for(I=1,A:count()){
        if(A[I,entity]:type()!="sc_weapon_base"){
            A[I,entity]:noCollide()
            A[I,entity]:freeze()
            A[I,entity]:parentTo(holoEntity(1))
        }
    }
    
    findIncludePlayerProps(owner())    
    findByModel("models/hunter/blocks/cube05x2x025.mdl")
    if(findResult(1):pos():y()>findResult(2):pos():y()){
        R1=findResult(1)
        L1=findResult(2)
    }else{
        R1=findResult(2)
        L1=findResult(1)
    }
    findByModel("models/hunter/blocks/cube05x8x025.mdl")
    if(findResult(1):pos():y()>findResult(2):pos():y()){
        R2=findResult(1)
        L2=findResult(2)
    }else{
        R2=findResult(2)
        L2=findResult(1)
    }    
    findByModel("models/hunter/blocks/cube025x8x025.mdl")
    if(findResult(1):pos():y()>findResult(2):pos():y()){
        R3=findResult(1)
        L3=findResult(2)
    }else{
        R3=findResult(2)
        L3=findResult(1)
    }
    
    holoCreate(2,holoEntity(1):pos(),vec(1,1,1),holoEntity(1):angles())
    holoAlpha(2,0)
    holoParent(2,1)
    holoCreate(3,holoEntity(1):pos(),vec(1,1,1),holoEntity(1):angles())
    holoAlpha(3,0)
    holoParent(3,1)
    
    holoCreate(4,R2:pos()+vec(-R2:boxSize():x()/4,R2:boxSize():y()/2,0))
    holoAng(4,R3:angles())
    holoAlpha(4,0)
    R3:deparent()
    R3:parentTo(holoEntity(4))
    holoParent(4,2)

    holoCreate(5,L2:pos()+vec(-L2:boxSize():x()/4,-L2:boxSize():y()/2,0))
    holoAng(5,L3:angles())
    L3:deparent()
    L3:parentTo(holoEntity(5))
    holoAlpha(5,0)
    holoParent(5,3)

        
    timer("Ready",20)
    timer("parent",50)
    runOnLast(1)

}
if(clk("Ready")){
    Ready=1
}
if(clk("parent")){
    holoPos(1,owner():attachmentPos("chest"))
    holoAng(1,owner():attachmentAng("chest"))
    holoAng(1,holoEntity(1):toWorld(ang(45,-90,0)))
    holoPos(1,holoEntity(1):toWorld(vec(6,-25,-6)))
    holoParentAttachment(1,owner(),"chest")
}
if(Ready){
    if(Fold==1){
        X=clamp(X,-10,178)+2
    }else{
        X=clamp(X,-8,180)-2
    }
    if(X>-10){
        holoAng(4,R2:toWorld(ang(0,0,X)))
        holoAng(5,L2:toWorld(ang(0,0,-X)))
    }else{
        local Z = owner():velL():z()
        local Y = owner():velL():y()
        local X = owner():velL():x()
        holoAng(4,R2:toWorld(ang( -clamp((X/10),-90,90) , 0 , (-10)-(Z/100)+(Y/100)+(X/1000) )))
        holoAng(5,L2:toWorld(ang( -clamp((X/10),-90,90) , 0 , (10) +(Z/100)+(Y/100)-(X/1000) )))
    }
    if(owner():keyJump()){
        owner():setVel(owner():vel()+(owner():eyeAngles():up())*40)
    }
}
if(last()){
    X=0
    for(I=1,A:count()){
        A[I,entity]:deparent()
    }
}
    
