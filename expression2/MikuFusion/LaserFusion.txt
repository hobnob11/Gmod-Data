@name 
@inputs 
@outputs 
@persist Lasers:array Base:entity X Y
@trigger 

if(first())
{
    findIncludePlayerProps(owner())
    #findByClass("infinity_antimatter_creator")
    findByClass("sc_weapon_base")
    Base = find()
    print(Base)
    holoCreate(1,Base:pos())
    holoAlpha(1,0)
    holoParent(1,Base)
    findIncludePlayerProps(owner())
    findByClass("infinity_laser_node")
    Lasers = findToArray()
    
    timer("move",100)
    runOnLast(1)
    function main()
    {
        
        X=X-15
        holoAng(1,ang(0,X,0))
    }
}
if(clk("move"))
{
    for(I=1,Lasers:count()){
        holoCreate(I+1,Lasers[I,entity]:pos())
        holoAlpha(I+1,0)
        holoAng(I+1,Lasers[I,entity]:angles())
        Lasers[I,entity]:parentTo(holoEntity(I+1))
        Lasers[I,entity]:propNotSolid(1)
    }
    timer("move2",100)
}
if(clk("move2"))
{
    for(I=1,Lasers:count()){
        holoPos(I+1,holoEntity(1):toWorld(vec(cos((360/Lasers:count())*I)*150,sin((360/Lasers:count())*I)*150,0)))
        holoAng(I+1,holoEntity(1):toWorld(ang(0,(360/Lasers:count())*I+181,0)))
        holoParent(I+1,1)
    }
    timer("main",100)
}
if(clk("main"))
{
    timer("main",100)
    main()
}
if(last()){
    for(I=1,Lasers:count()){
    Lasers[I,entity]:deparent()
}
}
