@name Hacky Core Health(DEBUG ONLY)
@persist Props:array
if(first() & entity():isConstrainedTo())
{
    Increment = 4096
    function number getBoundary(Direction:vector)
    {
        local MyIncrement = Increment
        local StartingVec = vec()
        while(MyIncrement > 0.01)
        {
            if(!(StartingVec+Direction*MyIncrement):isInWorld())
            {
                MyIncrement = MyIncrement/2
            }
            else
            {
                StartingVec = StartingVec + Direction*MyIncrement
            }
        }
        return StartingVec:length()
    }
    MaxZ=getBoundary(vec(0,0,1))
    MinZ=getBoundary(vec(0,0,-1))
    
    MaxX=getBoundary(vec(1,0,0))
    MinX=getBoundary(vec(-1,0,0))
    
    MaxY=getBoundary(vec(0,1,0))
    MinY=getBoundary(vec(0,-1,0))
    MaxVec = vec(MaxX,MaxY,MaxZ)
    MinVec = vec(-MinX,-MinY,-MinZ)
    
    Core=entity():isConstrainedTo()
    for(I=1,4)
    {
        local X=(I%2==0) ? MaxX : -MinX
        local Y=(I>2) ? MaxY : -MinY
        local Z=(I%2==0) ? MaxZ : -MinZ
        P=propSpawn("models/hunter/plates/plate.mdl",vec(X,Y,Z),ang(),1)
        P:propNotSolid(1)
        P:setMaterial("phoenix_storms/black_chrome")
        P:weld(Core)
    }
    runOnLast(1)
}
if(last())
{
    Props:propDelete()
}
