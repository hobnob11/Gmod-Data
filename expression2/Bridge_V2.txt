@name Bridge V2
@persist Target:entity HC [Pos Dir]:vector
if(first()|dupefinished())
{
findIncludePlayerProps(owner())
findInCone(entity():pos(),entity():up(),10000,45)
findClipToClass("gmod_wire_expression2")
local Array = findToArray()
foreach(K,V:entity = Array)
{
    if(V:getName()==entity():getName()){
        Target = V
        break
    }
}
print(Target)

print(acos(Target:up():normalized():dot((entity():pos()-Target:pos()):normalized())))

    function entity spawnStart(E:entity)
    {
        local V = E:toWorld(vec(-54,0,5-(E:boxSize():z()/2)))
        local A = E:angles()+ang(0,90,0)
        return propSpawn("models/smallbridge/elevators_small/sbselevp0.mdl",V,A,1)
    }
    function makeBridge(Start:entity,End:entity)
    {
        Pos = Start:pos()
        Dir = End:pos() - Start:pos()
        Dir = Dir:normalized() * Start:boxSize():x()
        while(propCanCreate()) {Pos+=Dir propSpawn("models/smallbridge/elevators_small/sbselevp0.mdl",Pos,Dir:toAngle(),1) if (Pos:distance(End:pos()) < Start:boxSize():x()) {break}}
    }
    
    runOnLast(1)
}
if(Target:isValid()){
local Base = spawnStart(entity():isWeldedTo())
local Tgt  = spawnStart(Target:isWeldedTo())

makeBridge(Base,Tgt)
}
if(last())
{
    propDeleteAll()
}
