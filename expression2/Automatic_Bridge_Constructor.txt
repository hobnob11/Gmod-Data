@name Automatic Bridge Constructor
#HARD MODE
@persist Target:entity HC
if(first()|dupefinished())
{
findIncludePlayerProps(owner())
findInCone(entity():pos(),entity():up(),10000,45)
findClipToClass("gmod_wire_expression2")
local Array = findToArray()
foreach(K,V:entity = Array)
{
    if(V:getName()=="Automatic Bridge Constructor"){
        Target = V
        break
    }
}
print(Target)

print(acos(Target:up():normalized():dot((entity():pos()-Target:pos()):normalized())))

    function entity spawnStart(E:entity)
    {
        local V = E:toWorld(vec(-54,0,5-(E:boxSize():z()/2)))
        local A = E:angles()+ang(0,90,0)
        return propSpawn("models/smallbridge/elevators_small/sbselevp2e.mdl",V,A,1)
    }
    
    #[
        local Ent = holoEntity(Idx)
        local BoxSize1 = vec(0,Ent:boxSize():y()/2,-Ent:boxSize():z()/2)
        local BoxSize2 = vec(0,Parent:boxSize():y()/2,Parent:boxSize():z()/2)
        
        holoPos(Idx,Parent:toWorld(BoxSize2 + BoxSize1:rotate(Angle)))
        holoAng(Idx,Parent:toWorld(Angle))
    
    ]#
    function entity makeBridge(BE:entity,EE:entity)
    {

        local V1= BE:toWorld(vec(BE:boxSize():x()/2,-BE:boxSize():y()/2,0))
        local V2= EE:toWorld(vec(-EE:boxSize():x()/2,EE:boxSize():y()/2,0))
        local V3= (V1+V2)/2
        local A = ang(0,bearing(V1,BE:angles(),V2)-90,0)
        print(A)
        local V4= BE:toWorld(BE:toLocal(V2)+BE:toLocal(V1):rotate(A))
        local E = propSpawn("models/smallbridge/elevators_small/sbselevp1.mdl",V4,A,1)
        holoCreate(1,V1)
        holoCreate(2,V2)
        holoCreate(3,V3)
        holoCreate(4,V4)
        
    }
    runOnLast(1)
}

local Base = spawnStart(entity():isWeldedTo())
local Tgt  = spawnStart(Target:isWeldedTo())
local Center = holoEntity(1):pos()
Center = Center + holoEntity(3):pos()
Center = Center / 2
holoCreate(10,Center)
makeBridge(Base,Tgt)
makeBridge(Tgt,Base)

if(last())
{
    propDeleteAll()
}
