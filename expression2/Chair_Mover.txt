@name Chair Mover
@persist Toggle Ready Chair1O:vector Chair2O:vector Holo1O:vector Chair1:entity Chair2:entity Base:entity X Mod
@inputs
@trigger Button

if(first()|duped())
{
    Chair1O = vec(-5.957031,-43.678223,27.051758)
    Chair2O = vec(-5.957031,-43.678223,20.052246)
    Holo1O  = vec(-5.957031,-43.678223,27.051758)
    runOnUse(1)
    runOnLast(1)
    findIncludePlayerProps(owner())
    findByModel("models/spacebuild/corvette_chair.mdl")
    Chair1 = find()
    findIncludePlayerProps(owner())
    findByModel("models/nova/airboat_seat.mdl")
    Chair2 = find()
    findIncludePlayerProps(owner())
    findByModel("models/hunter/plates/plate075x3.mdl")
    Base = find()
    
    holoCreate(1)
    holoPos(1,Chair1:pos())
    holoAng(1,Chair1:angles())
    Chair1:parentTo(holoEntity(1))
    Chair2:parentTo(holoEntity(1))
    holoParent(1,Base)    
    function move()
    {
        holoPos(1,Base:toWorld(Holo1O))
        Chair1:setPos(Base:toWorld(Chair1O))
        Chair2:setPos(Base:toWorld(Chair2O))
        Ready=1
    }
    timer(100,1,"move","move()")

    function leakspin()
    {
        local A = X + Mod
        X = clamp( A , 0,180 )
        holoAng(1,Base:toWorld(ang(0,-90-X,0)))
    }
}
if(Ready)
{
    Toggle = ( Toggle ? 0 : 1)
    
    if(Toggle)
    {
        Mod=2
        timer(50,90,"leakspin","leakspin()")
    }
    else
    {
        Mod=-2
        timer(50,90,"leakspin","leakspin()")
    }
}

if(last())
{
    Base:deparent()
    Chair1:deparent()
    Chair2:deparent()
}
