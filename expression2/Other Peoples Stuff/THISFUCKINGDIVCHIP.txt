@name Spinny :D
@inputs On
@outputs On Angle Speed X
@persist Base:entity Interval Mul Acc Dec MinSpeed MaxSpeed

if(first()){
    Interval = 128
    Mul = Interval/tickInterval()/1000 #this ensures it'll spin at the same rate as when you were using runOnTick
    
    Acc = 0.01 #default: 0.01
    Dec = 0.02 #default: 0.02
    MinSpeed = 0.5 #default: 0.5
    MaxSpeed = 15 #default: 15
    
    Base = entity():isWeldedTo()
    
    entity():createWire(Base,"On","On")
    
    Base:setAlpha(0)
    holoCreate(1,Base:pos(),vec(1,1,1))
    holoModel(1,"models/ce_ls3additional/compressor/compressor_huge.mdl")
    holoAng(1,Base:angles())
    holoClipEnabled(1,1,1)
    holoClip(1,1,vec(-59.5,0,0),vec(1,0,0),0)
    holoClipEnabled(1,2,1)
    holoClip(1,2,vec(59,0,0),vec(-1,0,0),0)

    holoCreate(2,Base:pos(),vec(1,1,1))
    holoModel(2,"models/ce_ls3additional/compressor/compressor_huge.mdl")
    holoAng(2,Base:angles())
    holoClipEnabled(2,1,1)
    holoClip(2,1,vec(-59.5,0,0),vec(-1,0,0),0)

    holoCreate(3,Base:pos(),vec(1,1,1))
    holoModel(3,"models/ce_ls3additional/compressor/compressor_huge.mdl")
    holoAng(3,Base:angles())
    holoClipEnabled(3,2,1)
    holoClip(3,2,vec(59,0,0),vec(1,0,0),0)
    
    holoCreate(4,Base:pos()+vec(0,0,25),vec(0.1,0.1,0.1))
    holoAng(4,Base:angles())
    holoParent(1,4)
    holoParent(4,Base)
    holoParent(2,Base)
    holoParent(3,Base)
} elseif (~On & On) {
    timer("spin",0)
    Speed = 0
    Base:soundPlay(1,0,"thrusters/jet01.wav")
    Base:soundPlay(2,0,"thrusters/jet03.wav")
    Base:soundPlay(3,0,"ambient/machines/beam_platform_loop1.wav")
    for(I=1,3) {
        soundPitch(I,0)     
    }
} elseif (clk("spin")) {
    Angle = abs(round(Base:toLocal(holoEntity(4):angles()):roll(),2))
    
    if (On) {
        Speed = clamp(Speed+Acc * Mul,0,MaxSpeed)
        X = X + Speed * Mul
    } elseif (!On & Speed > 0.5) {
        Speed = clamp(Speed-Dec * Mul,MinSpeed,MaxSpeed)
        X = X + Speed * Mul
    } elseif (!On & Speed <= MinSpeed) {
        local Dir = -sign(angnorm(X))
        if (Speed != MinSpeed * Dir) {
            Speed = clamp(Speed + Dec * Mul * Dir,-MinSpeed,MinSpeed)
        }
        
        X = X + Speed * Mul
    
        if (inrange(Angle,-2,2)) {
            X = 0
            Speed = 0
            soundPurge()
            Base:soundPlay(5,2,"ambient/machines/spinup.wav")
            Base:soundPlay(6,5,"ambient/machines/steam_release_2.wav")
            stoptimer("spin")
            exit()
        }
    }
    
    holoAng(4,Base:toWorld(ang(0,0,X)))
    
    for(I=1,3) {
        soundPitch(I,20*(Speed/3))     
    }
    
    timer("spin",Interval)
}
        
        
    
#[
On = Link["On",number]
Angle = abs(round(Base:toLocal(holoEntity(4):angles()):roll()/90,2))

if((On & $On) | (first() & On)) {
    Speed = 0
    Base:soundPlay(1,0,"thrusters/jet01.wav")
    Base:soundPlay(2,0,"thrusters/jet03.wav")
    Base:soundPlay(3,0,"ambient/machines/beam_platform_loop1.wav")
#    Base:soundPlay(4,0,"ambient/energy/force_field_loop1.wav")
}elseif(On) {
    Speed = clamp(Speed+0.01,0,15)
    soundPitch(1,20*(Speed/3))
    soundPitch(2,20*(Speed/3))
    soundPitch(3,20*(Speed/3))
    soundPitch(4,20*(Speed/3))
}elseif(!On & Speed > 0.5) {
    Speed = clamp(Speed-0.1,0.5,15)
    soundPitch(1,20*(Speed/3))
    soundPitch(2,20*(Speed/3))
    soundPitch(3,20*(Speed/3))
    soundPitch(4,20*(Speed/3))
}elseif(!On & Speed == 0.5 ) {
    soundPitch(1,20*(Speed/3))
    soundPitch(2,20*(Speed/3))
    soundPitch(3,20*(Speed/3))
    soundPitch(4,20*(Speed/3))

    if(Angle == 0) {
        Speed = 0
        soundPurge()
        Base:soundPlay(5,2,"ambient/machines/spinup.wav")
        Base:soundPlay(6,5,"ambient/machines/steam_release_2.wav")
    }
}
holoAng(4,Base:toWorld(ang(0,0,X)))
X=X+Speed
]#
