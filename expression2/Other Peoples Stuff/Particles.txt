@name Particles
@inputs 
@outputs 
@persist Mat:string Velocity:vector
@trigger 

if(first()|duped()) { #--Program Header

#------------------------
# EDITABLE VARS
#------------------------

Mat = "effects/shipsplosion/smoke_001add"
#Mat = "sprites/trace"

#--End of Editable Vars--

function void setupParticle(Entity:entity)
{
    #print(emitterCanCreate() + " (" + emitterRemainingSpawns() + ")")
    
    Velocity = vec(300, 0, 0)
    
    #holoCreate(1)
    #holoPos(1, entity():toWorld(vec(100, 0, 0)))
    
    emitterCreate(1, Entity:pos())
    emitterSetParent(1, entity())
    emitterSetRate(1, 100)
    emitterSetLifespan(1, 3)
    emitterSetMaterial(1, "effects/shipsplosion/water_001add")
    emitterSetDrag(1, 30)
    emitterSetVelocity(1, vec(0, 350, 0))
    emitterSetVelocityNoise(1, vec(50, 50, 0))
    emitterSetVelocityInherit(1, 1)
    emitterSetCanBounce(1, 1)
    emitterSetBounce(1, 0.5)
    emitterSetColor(1, vec(200, 225, 255))
    emitterSetStartAlpha(1, 255)
    emitterSetEndAlpha(1, 0)
    emitterSetStartSize(1, 5)
    emitterSetEndSize(1, 150)
    #emitterSetGravity(1, vec(12, 12, 50))
    emitterSetGravity(1, vec(0, 0, -600))
    emitterSetRollNoise(1, 180)
    emitterSetRollSpeed(1, 0.01)
    emitterSetRollSpeedNoise(1, 5)
    emitterSetRollDrag(1, 0.05)
    emitterSetRollSpeedMin(1, 0.1)
    
    #print(emitterCanCreate() + " (" + emitterRemainingSpawns() + ")")
}

#---------------------
# THINK LOOP
#---------------------
function void think()
{
    #local Trace = rangerOffset(500, entity():pos(), vec(0, 0, -1))
    #emitterSetPos(1, Trace:pos())
    
    #Velocity = Velocity:rotate(ang(0, 1, 0))
    #emitterSetVelocity(1, Velocity)
    
    #emitterSetPos(1, entity():pos())
    
    #holoPos(1, entity():toWorld(vec(100, 0, 0):rotate(ang(0, (curtime()*36) % 360, 0))))
    
    #emitterSetColor(1, randvec()*255)
}
#--End of Think Loop--

} #--End of Program Header



#-----------------------
# PROGRAM ENTRY POINT
#-----------------------
if(dupefinished()) { reset() }
elseif(first())
{
    setupParticle(owner())
    
    timer("Think", 100)
}

if(clk("Think"))
{
    think()
    timer("Think", 10)
}
