@name asdfgh
@inputs 
@outputs Pos:vector
@persist Planet:entity X N
@trigger 

interval(50)

findByClass("infinity_planet")
Planet=findClosest(entity():pos())
if(first()){

holoCreate(10000,Planet:boxCenterW(),vec(1,1,1))
holoCreate(10001,Planet:boxCenterW(),vec(1,1,1))

for(X=1,35){
    
holoCreate(X,Planet:boxCenterW()+vec(0,sin(X*10)*Planet:boxSize():x()/1,cos(X*10)*Planet:boxSize():x()/1),vec(0.1,0.1,0.1))
holoAng(X,ang(0,0,-X*10))
holoEntity(X):setTrails(100,100,100,"trails/physbeam",vec(random()*255,random()*255,random()*255),255)
holoParent(X,holoEntity(10000))
holoCreate(X+35,Planet:boxCenterW()+vec(sin(X*10)*Planet:boxSize():x()/1,0,cos(X*10)*Planet:boxSize():x()/1),vec(0.1,0.1,0.1))
holoAng(X+35,ang(X*10,0,0))
holoEntity(X+35):setTrails(100,100,100,"trails/physbeam",vec(random()*255,random()*255,random()*255),255)
holoParent(X+35,holoEntity(10001))
}

}
N=N+5
holoAng(10000,ang(N,0,0))
holoAng(10001,ang(0,N,0))
Pos=holoEntity(1):pos()
