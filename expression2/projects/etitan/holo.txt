@name ETitan holo
@inputs Parent:entity 
@outputs 
@persist E:entity Turrets:array
@trigger 
@autoupdate
interval(100)

if(first() | dupefinished())
{
    E = holoCreate(1)
    holoModel(1, Parent:model())
    holoScale(1, vec(0.002) )
    holoPos(1, entity():pos() + vec( 0, 0, 10 ) )
    holoAng(1, entity():toWorld(ang(0,90,0)))
    holoAlpha(1, 200)
    holoParent(1, entity())
    
    holoCreate(2)
    holoModel(2, "hqsphere")
    holoScale(2,vec(-1.5))
    holoPos(2, entity():pos()+vec(0,0,10))
    holoParent(2, entity())
    
    findIncludePlayerProps(owner())
    findByClass("sc_turret")
    for(I=1,findCount())
    {
        Turrets[2+I,entity]=findResult(I)
    }
    
    foreach(K,V:entity=Turrets)
    {
        holoCreate(K)
        holoScale(K,vec(0.05))
        holoModel(K,"sphere")
        holoPos(K,E:toWorld( Parent:toLocal(V:pos())*0.002 ) )
        holoParent(K,1)
    }

}
holoAng(1, entity():toWorld(ang(0,curtime()*2,0)))

foreach(K,V:entity=Turrets)
{
    local WL = V:wirelink()
    local CF = WL["Can Fire",number]
    local RL = WL["Reloading",number]
    
    if( CF & !RL ){
        holoColor(K,vec(0,255,0))
    }elseif( !CF & RL ){
        holoColor(K,vec(255,130,0))
    }else{
        holoColor(K,vec(255,0,0))
    }
}

