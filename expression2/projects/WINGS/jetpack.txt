@name Jetpack
@inputs 
@outputs X SPACE
@persist Max CanSound Planets:array Base:entity ClosestPlanetEnt:entity Core:entity Wep1:entity Wep2:entity Wep1L:wirelink Wep2L:wirelink WepArray:array
@persist Wep3L:wirelink Wep4L:wirelink Wep5L:wirelink Wep6L:wirelink Wep7L:wirelink Wep8L:wirelink Wep9L:wirelink Wep10L:wirelink
@trigger 
if(first()){
runOnTick(1)
Mat1 = "effects/shipsplosion/fire_001"
Mat2 = "effects/shipsplosion/smoke_001"
Max = 20
CanSound=1
function update(){timer("UPDATE_THINGS",1)}

function void setupParticle(I,Entity:entity,Mat:string,Color:vector,Lifespan)
{
    #print(emitterCanCreate() + " (" + emitterRemainingSpawns() + ")")
    
    Velocity = vec(300, 0, 0)
    
    #holoCreate(1)
    #holoPos(1, entity():toWorld(vec(100, 0, 0)))
    
    emitterCreate(I, Entity:pos())
    emitterSetParent(I,Entity)
    emitterSetRate(I, 100)
    emitterSetLifespan(I, Lifespan)
    emitterSetMaterial(I, Mat)
    emitterSetDrag(I, 300)
    emitterSetVelocity(I, vec(0, 0, -350))
    emitterSetVelocityNoise(I, vec(50, 50, 0))
    emitterSetVelocityInherit(I, 1)
    emitterSetCanBounce(I, 1)
    emitterSetBounce(I, 0.5)
    emitterSetColor(I, Color)
    emitterSetStartAlpha(I, 255)
    emitterSetEndAlpha(I, 0)
    emitterSetStartSize(I, 5)
    emitterSetEndSize(I, 150)
    #emitterSetGravity(1, vec(12, 12, 50))
    emitterSetGravity(I, vec(0, 0, -600))
    emitterSetRollNoise(I, 180)
    emitterSetRollSpeed(I, 0.01)
    emitterSetRollSpeedNoise(I, 5)
    emitterSetRollDrag(I, 0.05)
    emitterSetRollSpeedMin(I, 0.1)
    
    #print(emitterCanCreate() + " (" + emitterRemainingSpawns() + ")")
}

findByClass("infinity_planet")
Planets = findToArray()

function void findClosestPlanet()
{
    local CurrentDistance = 90000000000000000001
    local CurrentClosest = noentity()
    foreach(K,V:entity = Planets)
    {
        local Dist = V:pos():distance(owner():pos())
        if(Dist < CurrentDistance)
        {
#            print(V:pos())
            CurrentDistance = Dist
            CurrentClosest = V
            update()
        }
    }
    ClosestPlanetEnt = CurrentClosest
#    print(round(ClosestPlanetEnt:pos())+":"+round(owner():pos())+":"+ClosestPlanetEnt:pos():distance(owner():pos()))
}


function void main(){
    
    
#    if(ClosestPlanetEnt:pos():distance(owner():pos())>=ClosestPlanetEnt:boxSize():z()/2){
#    print("ClosestPlanet: "+round(ClosestPlanetEnt:boxCenterW())+" | Distance: " + round(ClosestPlanetEnt:boxCenterW():distance(owner():pos())) + "  |  Radius: " + round(ClosestPlanetEnt:boxSize():length()/2)) 
    if(ClosestPlanetEnt:boxCenterW():distance(owner():pos())>=ClosestPlanetEnt:boxSize():x()/2){
        SPACE=1
    }else{
        SPACE=0
    }

    if(owner():keyJump()){
        
#        holoAlpha(1,255)
        
        if(SPACE){
            if(owner():keySprint()){
                owner():setVel(owner():vel()-(owner():vel()/10))
            }else{
                owner():setVel(owner():vel()+owner():eye()*40)
            }
        }else{
            if(owner():keySprint()){
                owner():setVel(owner():vel():setZ(owner():vel():z()/2)+vec(0,0,gravity()/66.579))
            }else{
                owner():setVel(owner():vel()+owner():eyeAngles():up()*40)
            }
        }

        emitterSetRate(1,100)
        emitterSetRate(2,100)
        if(CanSound){
            CanSound=0
            holoEntity(1):soundPlay("jet03",2577,"thrusters/hover00.wav")
            timer("CanSound",2577)
        }
        if(clk("CanSound")){
            CanSound=1
        }
    }
    else
    {
#        holoAlpha(1,0)
        emitterSetRate(1,0)
        emitterSetRate(2,0)
        soundStop("jet03")
        CanSound=1
    }
    
    
    

}
Core=entity():isWeldedTo()
#copy pasta

holoCreate(1,entity():pos(),vec(1,1,1))
holoPos(1, Core:toWorld(vec(29,0,-12)))
holoAng(1, Core:angles() + ang(0,0,0))
holoModel(1,"models/slyfo_2/armsuit1_torsomed.mdl")
Base=holoEntity(1)

holoCreate(2,Base:toWorld(vec(0,3,0)),vec(1,1,1))
holoModel(2,"models/slyfo_2/armsuit1_torso.mdl")
holoAng(2,Base:angles())
holoClipEnabled(2,1,1)
holoClipEnabled(2,2,1)
holoClip(2,1,vec(0,5.5,0),vec(0,1,0),0)
holoClip(2,2,vec(0,0,1),vec(0,0,1),0)

holoCreate(20,holoEntity(2):toWorld(vec(-12,5,10)),vec(0.5,0.5,0.5))
holoModel(20,"hqsphere")
holoMaterial(20,"spacebuild/body3skin")
holoAng(20,holoEntity(2):angles()+ang(0,0,0))
holoParent(2,20)
holoParent(20,Base)


holoCreate(3,Base:toWorld(vec(0,-3,0)),vec(1,1,1))
holoModel(3,"models/slyfo_2/armsuit1_torso.mdl")
holoAng(3,Base:angles())
holoClipEnabled(3,1,1)
holoClipEnabled(3,2,1)
holoClip(3,1,vec(0,-5.5,0),vec(0,-1,0),0)
holoClip(3,2,vec(0,0,1),vec(0,0,1),0)


holoCreate(30,holoEntity(3):toWorld(vec(-12,-5,10)),vec(0.5,0.5,0.5))
holoModel(30,"hqsphere")
holoMaterial(30,"spacebuild/body3skin")
holoAng(30,holoEntity(3):angles()+ang(0,0,0))
holoParent(3,30)
holoParent(30,Base)

holoVisible(1,owner(),0)
entity():setAlpha(0)
entity():noCollide()
Core:noCollide()
Core:parentTo(Base)
for(I=1,Core:getConstraints():count()){
    Core:getConstraints()[I,entity]:parentTo(holoEntity(1))
}
Wep1=noentity()
Wep2=noentity()

for(I=1,Core:getConstraints():count()){
    if(Core:getConstraints()[I,entity]:type()=="sc_weapon_base"){
        if(Wep1==noentity()){
            Wep1=Core:getConstraints()[I,entity]
        }else{
            WepArray[I,entity]=Core:getConstraints()[I,entity]
        }
    }
}

holoCreate(21,Wep1:pos(),vec(0.1,0.1,0.1))
holoAng(21,Wep1:angles())
Wep1:parentTo(holoEntity(21))
holoPos(21,holoEntity(20):toWorld(vec(30,4.7,5)))
holoAng(21,holoEntity(20):angles())
holoParent(21,20)

holoCreate(31,WepArray[2,entity]:pos(),vec(0.1,0.1,0.1))
holoAng(31,WepArray[2,entity]:angles())
WepArray[2,entity]:parentTo(holoEntity(31))
for(I=3,WepArray:count()){
    WepArray[I,entity]:setPos(WepArray[2,entity]:pos())
    WepArray[I,entity]:setAng(WepArray[2,entity]:angles())
    WepArray[I,entity]:parentTo(WepArray[2,entity])
}
holoPos(31,holoEntity(30):toWorld(vec(30,-4.7,5)))
holoAng(31,holoEntity(30):angles())
holoParent(31,30)

Wep1:makeWirelink()
Wep1L=Wep1:getWirelink()
WepArray[2,entity]:makeWirelink()
Wep2L=WepArray[2,entity]:getWirelink()
WepArray[3,entity]:makeWirelink()
Wep3L=WepArray[3,entity]:getWirelink()
WepArray[4,entity]:makeWirelink()
Wep4L=WepArray[4,entity]:getWirelink()
WepArray[5,entity]:makeWirelink()
Wep5L=WepArray[5,entity]:getWirelink()
WepArray[6,entity]:makeWirelink()
Wep6L=WepArray[6,entity]:getWirelink()
WepArray[7,entity]:makeWirelink()
Wep7L=WepArray[7,entity]:getWirelink()
WepArray[8,entity]:makeWirelink()
Wep8L=WepArray[8,entity]:getWirelink()
WepArray[9,entity]:makeWirelink()
Wep9L=WepArray[9,entity]:getWirelink()
WepArray[10,entity]:makeWirelink()
Wep10L=WepArray[10,entity]:getWirelink()

setupParticle(1,holoEntity(1),Mat1,vec(255,255,255),1)
setupParticle(2,holoEntity(1),Mat2,vec(50,50,50),3)

print("timerinit")
timer(100,0,"Find Closest Planet","findClosestPlanet()")    
runOnLast(1)
    
holoPos(   1, owner():attachmentPos("chest"))
holoCreate(100,owner():attachmentPos("chest"))
holoAng(100,owner():attachmentAng("chest"))
holoPos(1,holoEntity(100):toWorld(vec(10,0,-2)))
holoAng(   1, owner():attachmentAng("chest"))
holoParentAttachment(1, owner() , "chest")
holoDelete(100)
}

if(last()){
    Core:deparent()
for(I=1,Core:getConstraints():count()){
    Core:getConstraints()[I,entity]:deparent()
}
}
main()
holoAng(20,owner():eyeAngles())
holoAng(30,owner():eyeAngles())

Wep1L["Fire",number]=(owner():keyAttack2() ? 1 : 0)
Wep2L["Fire",number]=(owner():keyAttack2() ? 1 : 0)
Wep3L["Fire",number]=(owner():keyAttack2() ? 1 : 0)
Wep4L["Fire",number]=(owner():keyAttack2() ? 1 : 0)
Wep5L["Fire",number]=(owner():keyAttack2() ? 1 : 0)
Wep6L["Fire",number]=(owner():keyAttack2() ? 1 : 0)
Wep7L["Fire",number]=(owner():keyAttack2() ? 1 : 0)
Wep8L["Fire",number]=(owner():keyAttack2() ? 1 : 0)
Wep9L["Fire",number]=(owner():keyAttack2() ? 1 : 0)
Wep10L["Fire",number]=(owner():keyAttack2() ? 1 : 0)

