@name Velocity Prediction
@inputs RM A D
@outputs Ent:entity A1 A2 D1 D2 AimVec:vector Mult
@persist Str:string
@trigger 
@autoupdate 
if(first())
{
#include "lib/hob"

runOnChat(1)
runOnTick(1)
}
if(dupefinished())
{
reset()
}
if(chatClk(owner()))
{
Str = owner():lastSaid()
if(Str:sub(1,1) == "!")
{
Ent = findPlayerByName(Str:sub(2))
hideChat(1)
}elseif(Str:sub(1,1) == ".")
{
Ent = entity(Str:sub(2):toNumber())
hideChat(1)
}
}
if(RM)
{
    Mult = clamp(Ent:vel():length()/1600 * 10, 1, 10)
    A1 = 0
    D1 = 0
    A2 = A
    D2 = D
} else
{
    Mult = 1
    A2 = 0
    D2 = 0
    A1 = A
    D1 = D
}

V = 2666.666    #2000 #<friget ones  |   fighter ones>#2666.666 #speed of torpedo
AimVec = direct_solution(Ent:pos(), Ent:vel(), V)
