@name Core Modeler
@inputs Entity:entity
@outputs 
@persist Core:entity Base:entity Wep1:entity Wep2:entity Y
@trigger 

runOnTick(1)

if(first()){
Core = entity():isWeldedTo()
holoCreate(1,entity():pos(),vec(1,1,1))
holoPos(1, Core:toWorld(vec(29,0,-12)))
holoAng(1, Core:angles() + ang(0,0,0))
holoModel(1,"models/slyfo_2/armsuit1_torsomed.mdl")
Base=holoEntity(1)

holoParent(1,Core)

holoCreate(2,Base:toWorld(vec(0,3,0)),vec(1,1,1))
holoModel(2,"models/slyfo_2/armsuit1_torso.mdl")
holoAng(2,Base:angles())
holoClipEnabled(2,1,1)
holoClipEnabled(2,2,1)
holoClip(2,1,vec(0,5.5,0),vec(0,1,0),0)
holoClip(2,2,vec(0,0,1),vec(0,0,1),0)

holoCreate(20,holoEntity(2):toWorld(vec(-12,5,10)),vec(0.5,0.5,0.5))
holoModel(20,"hqsphere")
holoMaterial(20,"spacebuild/body3skin")
holoAng(20,holoEntity(2):angles()+ang(0,0,0))
holoParent(2,20)



holoCreate(3,Base:toWorld(vec(0,-3,0)),vec(1,1,1))
holoModel(3,"models/slyfo_2/armsuit1_torso.mdl")
holoAng(3,Base:angles())
holoClipEnabled(3,1,1)
holoClipEnabled(3,2,1)
holoClip(3,1,vec(0,-5.5,0),vec(0,-1,0),0)
holoClip(3,2,vec(0,0,1),vec(0,0,1),0)


holoCreate(30,holoEntity(3):toWorld(vec(-12,-5,10)),vec(0.5,0.5,0.5))
holoModel(30,"hqsphere")
holoMaterial(30,"spacebuild/body3skin")
holoAng(30,holoEntity(3):angles()+ang(0,0,0))
holoParent(3,30)

for(I=1,Core:getConstraints():count()){
    Core:getConstraints()[I,entity]:parentTo(holoEntity(1))
}
Wep1=noentity()
Wep2=noentity()

for(I=1,Core:getConstraints():count()){
    if(Core:getConstraints()[I,entity]:type()=="sc_weapon_base"){
        if(Wep1==noentity()){
            Wep1=Core:getConstraints()[I,entity]
        }else{
            Wep2=Core:getConstraints()[I,entity]
        }
    }
}

holoCreate(21,Wep1:pos(),vec(0.1,0.1,0.1))
holoAng(21,Wep1:angles())
Wep1:parentTo(holoEntity(21))
holoPos(21,holoEntity(20):toWorld(vec(30,4.7,5)))
holoAng(21,holoEntity(20):angles())
holoParent(21,20)

holoCreate(31,Wep2:pos(),vec(0.1,0.1,0.1))
holoAng(31,Wep2:angles())
Wep2:parentTo(holoEntity(31))
holoPos(31,holoEntity(30):toWorld(vec(30,-4.7,5)))
holoAng(31,holoEntity(30):angles())
holoParent(31,30)

}


holoAng(20,owner():eyeAngles())
holoAng(30,owner():eyeAngles())

