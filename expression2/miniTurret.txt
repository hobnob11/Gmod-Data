@name miniTurret
@inputs Weapon:entity Fire Target:entity
@outputs 
@persist Wep:entity SpeedLimit B:entity E:entity CurTime
@trigger 
@model models/props_phx/gears/bevel90_24.mdl
if(first())
{
    #include "lib/hob/spacecombat"
    #include "lib/hob/math"
    runOnTick(1)
    runOnLast(1)
    B = holoCreate(1)
    holoModel(1,"models/props_phx/gears/bevel12.mdl")
    holoPos(1,entity():toWorld(vec(0,0,2)))
    holoParent(1,entity())
        
    E = holoCreate(2)
    holoScale(2,vec(0.1))
    holoPos(2,B:toWorld(vec(0,0,4.5)))
    holoAng(2,B:toWorld(ang(0,0,0)))
    holoParent(2,1)
    
    holoCreate(3)
    holoModel(3,"models/props_phx/gears/spur9.mdl")
    holoPos(3,E:toWorld(vec(0,-0.8,0)))
    holoAng(3,E:toWorld(ang(0,0,90)))
    holoScaleUnits(3,vec(10,10,1))
    holoParent(3,2)
    
    holoCreate(4)
    holoModel(4,"models/props_phx/gears/spur9.mdl")
    holoPos(4,E:toWorld(vec(0,1.8,0)))
    holoAng(4,E:toWorld(ang(0,0,90)))
    holoScaleUnits(4,vec(10,10,1))
    holoParent(4,2)
    Wep = Weapon
    Weapon:setPos(E:toWorld(vec(0,0,0)))
    Weapon:setAng(E:toWorld(ang(0,0,0)))
    timer(100,1,"parent","parentTo(e:e)",Weapon,E)
    
    SpeedLimit = Weapon:getWeaponSpeed()
}
if(last()){Weapon:deparent()}
if(->Weapon & !Wep:isValid()){reset()}
if(!Weapon:parent():isValid()){exit()}

local CurVec = E:forward()
local TargetVec = (E:pos() - Target:pos()):toAngle():forward()
CurTime = curtime()
local Speed = ($CurTime) * SpeedLimit
local Ang = entity():toLocal(smoothness2(CurVec,TargetVec,Speed))
holoAng(1,entity():toWorld(ang(0,Ang:yaw(),0)))
holoAng(2,B:toWorld(ang(clamp(Ang:pitch(),10,90),0,0)))
