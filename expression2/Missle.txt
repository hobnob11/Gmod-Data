@name generic
@inputs 
@outputs 
@persist Center:entity RNGR:ranger Accleration SpeedLMT SpeedFRWD Floof Wham [Target TargetA TargetB]:vector Go
@trigger 
@model models/sprops/cylinders/size_5/cylinder_12x48.mdl

if(first() | duped() | dupefinished()){
    entity():unWeld(entity():isWeldedTo())
    Center = (entity():isWeldedTo():isValid() ? entity():isWeldedTo() : entity())
    Floof = 5
    Wham  = 4
    Zoom  = 0.000002
    TargetA =playersAdmins()[random(1,playersAdmins():count()),entity]:pos()
    #TargetA = vec()
    Target = entity():pos()+vec(0,0,50000)
    Center:soundPlay(1,0,"thrusters/rocket04.wav")
    soundPitch(1,random(40,60))
    soundVolume(1,100)
    
    Center:soundPlay(2,0,"thrusters/jet02.wav")
    soundPitch(2,random(30,70))
 #   soundVolume(1,100)
        
    Center:soundPlay(3,0,"npc/env_headcrabcanister/explosion.wav")
    soundPitch(3,30)
  #  soundVolume(1,100)
    
    Center:propFreeze(0)
    
    rangerHitEntities(0)
    rangerPersist(1)
    
    holoCreate(1)
    holoCreate(2)
    holoCreate(3)
    holoCreate(4)
    
    holoModel(1,"models/props_silo/rocket_engine.mdl")
    holoModel(2,"models/props_silo/rocket_engine.mdl")
    holoModel(3,"models/props_silo/rocket_engine.mdl")
    holoModel(4,"models/sprops/misc/fittings/cred_12_9_tall.mdl")
        
    holoScale(1,vec(0.1,0.1,0.1))
    holoScale(2,vec(0.1,0.1,0.1))   
    holoScale(3,vec(0.1,0.1,0.1)) 
    holoScale(4,vec(1.3,1.3,1.6))
        
    holoPos(1,Center:toWorld(vec(0,0,-35)))
    holoPos(2,Center:toWorld(vec(0,0,-35)))
    holoPos(3,Center:toWorld(vec(0,0,-35)))
    holoPos(4,Center:toWorld(vec(0,0,-15)))
            
    holoAng(1,Center:toWorld(ang(0,0,0)))
    holoAng(2,Center:toWorld(ang(0,120,0)))
    holoAng(3,Center:toWorld(ang(0,240,0)))   
    holoAng(4,Center:toWorld(ang(0,0,0)))   
    
    for(I = 1,4){
        holoParent(I,Center)
    }
    
    emitterCreate(1,holoEntity(1):toWorld(vec(0,0,-5-Wham)))
    emitterSetMaterial(1,"effects/shipsplosion/fire_001")
    emitterSetRate(1,15)
    emitterSetLifespan(1,1.5*(Wham*0.5))
    emitterSetVelocity(1,vec(0,0,-20-(Wham*2)))
    emitterSetVelocityNoise(1,vec(1.5,1.5,1))
    emitterSetDrag(1,9)
    emitterSetRollSpeed(1,7)
    emitterSetRollSpeedNoise(1,21)
    emitterSetParent(1,holoEntity(1))
    emitterSetEndAlpha(1,250)
    emitterSetStartAlpha(1,255)
    emitterSetEndSize(1,0.02)
    emitterSetStartSize(1,15*Wham)
    emitterSetCanBounce(1,1)
    emitterSetBounce(1,15)
    emitterSetRollNoise(1,360)
    
    
    emitterCreate(2,holoEntity(1):toWorld(vec(0,0,-6)))
    emitterSetMaterial(2,"effects/shipsplosion/smoke_001")
    emitterSetRate(2,20)
    emitterSetLifespan(2,2*Floof)
    emitterSetVelocity(2,vec(0,0,-70))
    emitterSetVelocityNoise(2,vec(4.5,4.5,4))
    emitterSetDrag(2,9)
    emitterSetRollSpeed(2,14)
    emitterSetRollSpeedNoise(2,21)
    emitterSetParent(2,holoEntity(1))
    emitterSetEndAlpha(2,0)
    emitterSetStartAlpha(2,255)
    emitterSetEndSize(2,100*Floof)
    emitterSetStartSize(2,15)
    emitterSetCanBounce(2,1)
    emitterSetBounce(2,15)
    emitterSetRollNoise(2,360)    
    drawSprite(1,"effects/flares/halo-flare_001_ignorez",holoEntity(1):toWorld(vec(0,0,-2)),500*Wham,500*Wham,vec(255,255,255),255,holoEntity(1))

    RNGR = rangerOffset(333,Center:pos(),-Center:up())
    
    emitterCreate(3,RNGR:pos())
    emitterSetMaterial(3,"effects/shipsplosion/smoke_001")
    emitterSetRate(3,50)
    emitterSetLifespan(3,10)
    emitterSetVelocity(3,vec(0,0,0))
    emitterSetVelocityNoise(3,vec(50,50,1))
    emitterSetDrag(3,29)
    emitterSetRollSpeed(3,7)
    emitterSetRollSpeedNoise(3,21)
    #emitterSetParent(3,holoEntity(1))
    emitterSetEndAlpha(3,50)
    emitterSetStartAlpha(3,255)
    emitterSetEndSize(3,100)
    emitterSetStartSize(3,25)
    emitterSetCanBounce(3,1)
    emitterSetBounce(3,0.1)
    emitterSetRollNoise(1,360)    
    entity():propDrag(0)
    entity():propGravity(0)

    Accleration = Zoom
    SpeedLMT = 2500000

    timer("Dis",500)
    timer("Move",100)
    timer("Target",20000)
}

if(clk("Dis")){
    timer("Dis",500)
    
    RNGR = rangerOffset(333,Center:pos(),-Center:up())
    
    Dis = RNGR:pos():distance(Center:pos())
    
    #print(""+ Dis)
    
    if(Dis > 300){
        emitterSetStartAlpha(3,0)
        emitterSetEndAlpha(3,0)
    }elseif(Dis < 300){
        emitterSetPos(3,RNGR:pos():setZ(RNGR:pos():z() + 10))
        emitterSetStartAlpha(3,255)
        emitterSetEndAlpha(3,23)
        emitterSetVelocityNoise(3,vec(Dis,Dis,2))
    #    print(Dis + "")
    }
}
if(clk("Target")){
    Go = 1
}

if(clk("Move")){



timer("Move",100)

    if(Go){
        TargetB = (TargetB*40 + TargetA)/41
    }else{
        TargetB = Target
    }
    SpeedFRWD = SpeedFRWD+(SpeedLMT*Accleration)
    SpeedFRWD = clamp(SpeedFRWD,-SpeedLMT,SpeedLMT)
    
    SpeedEND = vec(0,0,SpeedFRWD):rotate(Center:angles())
    
    Center:setAng((Center:pos()-TargetB):toAngle()+ang(-90,0,0))
    
    Center:setVel(SpeedEND)
    
    if(Center:pos():distance(TargetA)<300){
        fx("sc_shipsplosion_capital",entity():pos(),1,ang(),vec(0,0,1),1)
        selfDestructAll()
    }
    
}

if(last()){
    removeSprite(1)
    emitterDestroyAll()
}
