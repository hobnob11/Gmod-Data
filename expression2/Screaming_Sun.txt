@name Screaming Sun
@inputs 
@outputs 
@persist Says:array Goto:vector Sprite1:string Color1:vector Sprite2:string Color2:vector NPCs:array Target:entity
@trigger 
@model models/Combine_Helicopter/helicopter_bomb01.mdl
#@model models/props_c17/FurnitureWashingmachine001a.mdl

interval(100)
runOnCollide(1)
#collisionSensitivity(350)

#entity():unFreeze()

if(first()|duped())
{
    
    if(entity():isConstrained())
    {
        local Ent = entity():isConstrainedTo()
        entity():unConstrain()
        
        entity():rope(Ent, 250, 0, 2)
    }
    
    entity():setAlpha(0)
    entity():setMass(50000)
    #entity():setSolid(0)
    removeAllSprites()
    #Goto = owner():pos()+vec(0,0,owner():height()*0.75)+(owner():forward()*100)
    #entity():setPosition(Goto)
    #timer("Parent",300)
    #Definitions
    Sprite1 = "sprites/light_glow03"
    Sprite2 = "sprites/light_glow03"
    Color1 = vec(255,128,0)
    Color2 = vec(255,255,200)
    #dLight(1,entity():pos(),7000,Color1,2)
    #entity():setTrails(50,5,1,"sprites/tp_beam001",Color2,255)
    entity():setTrails(50,5,1,"trails/laser",Color2,255)
    
    dLight(1,entity():pos(),512,Color1,5)
    drawSprite(1,Sprite1,entity():pos(),750,5,Color1,255,entity())
    #drawSprite(2,Sprite1,entity():pos()+vec(0,10,25),5000,200,Color1,255,1)
    #drawSprite(3,Sprite1,entity():pos()+vec(-10,0,25),5000,200,Color1,255,1)
    
    drawSprite(2,Sprite2,entity():pos(),750,750,Color2,128,entity())
    drawSprite(3,Sprite2,entity():pos(),200,200,Color2,255,entity())
    #drawSprite(4,Sprite2,entity():pos()+vec(0,20,25),20000,20000,Color2,255,1)
    
    setSpriteIgnoreZ(1,1)
    setSpriteIgnoreZ(2,1)
    setSpriteIgnoreZ(3,1)
    
    #Build BONK says
    Says[1,string] = "BONK!"
    Says[2,string] = "Oh hi there!"
    Says[3,string] = "Coming through!"
    Says[4,string] = "Pardon me."
    Says[5,string] = "Excuse me."
    Says[6,string] = "GOTCHA!"
    
    #Sound
    soundPlay("Jingle",0,"ambient/music/looping_radio_mix.wav")
    soundPlay("YAAABAAA",0,"npc/zombie/moan_loop3.wav")
    
    emitterCreate(1, entity():pos())
    emitterSetRate(1, 50)
    emitterSetLifespan(1, 3)
    emitterSetMaterial(1, "effects/shipsplosion/fire_001")
    #emitterSetMaterial(1, "effects/shipsplosion/water_001add")
    #emitterSetMaterial(1, "sprites/light_ignorez")
    #emitterSetMaterial(1, "effects/gunshiptracer")
    emitterSetVelocity(1, vec(0, 0, 15))
    emitterSetVelocityNoise(1, vec(150, 150, 150))
    emitterSetVelocityInherit(1, 0.25)
    #emitterSetGravity(1, vec(0, 0, -600))
    emitterSetDrag(1, 150)
    emitterSetBounce(1, 0.25)
    emitterSetCanBounce(1, 1)
    emitterSetColor(1, vec(255, 255, 200))
    emitterSetStartAlpha(1, 255)
    emitterSetEndAlpha(1, 0)
    emitterSetStartSize(1, 10)
    emitterSetEndSize(1, 500)
    #emitterSetStartLength(1, 10)
    #emitterSetEndLength(1, 1)
    #emitterSetGravity(1, vec(5, 0, 10))
    emitterSetRoll(1, 0)
    emitterSetRollNoise(1, 180)
    emitterSetRollSpeed(1, 0.01)
    #emitterSetRollSpeedNoise(1, 3)
    #emitterSetRollDrag(1, 0.05)
    #emitterSetRollSpeedNoise(1, 30)
    #emitterSetAngles(1, ang(0, 0, 0))
    #emitterSetAngleVelocity(1, ang(10, 10, 10))
    emitterSetParent(1, entity())
    
    entity():combatImmune(1)
    
    timer("Find Targets",1000)
}

runOnChat(1)

if(chatClk(owner()))
{
    LastSaid = owner():lastSaid():lower()
    Command = LastSaid:explode(": "):string(1)
    Arg = LastSaid:explode(": "):string(2)
    
    if(Command == "attack" | Command == "save" | Command == "kill")
    {
        hideChat(1)
        Ply = findPlayerByName(Arg)
        if(Ply)
        {
            Target = Ply
            if(Ply:inVehicle())
            {
                Target = Ply:vehicle()
            }
            hint("Attacking " + Target:toString(), 7)
        }
        else
        {
            hint("Target Not Found",7)
        }
    }
}

if(!Target:isAlive() & !Target:isVehicle())
{
    Target = noentity()
}

#Find NPCs to crash into
if(clk("Find Targets"))
{
    if(findCanQuery())
    {
        #findByClass("env_laserdot")
        #findByClass("gmod_wire_expression2")
        #findExcludePlayerProps(owner())
        #findByClass("player")
        #findClipFromEntity(owner())
        #findByClass("rpg_missile")
        findByClass("npc_*")
        findClipFromClass("npc_barnacle*")
        findClipFromClass("npc_maker")
        #findClipFromClass("npc_grenade_frag")
        #findByClass("ship_core")
        #findByModel("models/props/cs_militia/skylight_glass.mdl")
        #findClipToClass("prop_physics")
        findSortByDistance(entity():pos())
        NPCs = findToArray()
        
        if(!Target) #| (!Target:isAlive() & !Target:isVehicle()))
        {
            Target = NPCs[1,entity]
            #hint("Attacking " + Target:toString(), 7)
        }
    }
    
    timer("Find Targets",1000)
}
if(!Target) #| (!Target:isAlive() & !Target:isVehicle()))
{
    for(Index = 1, NPCs:count())
    {
        Query = NPCs[Index,entity]
        if(Query) #& Query:isAlive())
        {
            Target = Query
            break
        }
    }
}

if(clk("Parent"))
{
    #owner():parentTo(entity())
}

#Collision Check
if(collideClk())
{
#    if(collideEnt())#:type() == "player")
#    {
#        Index = randint(1,Says:count())
#        concmd("ulx tsay " + Says[Index,string]) 
#    }
}

#Speed Based Particle resize
Speed = entity():vel():length()

setSpriteSizeX(1,1500+(Speed/10))
setSpriteSizeY(1,10+(Speed/10))

setSpriteSizeX(2,200+(Speed/10))
setSpriteSizeY(2,200+(Speed/10))

setSpriteSizeX(3,200+(Speed/10))
setSpriteSizeY(3,200+(Speed/10))

emitterSetEndSize(1, clamp(500*(Speed/3000), 1, 500))

#Fly Code
if(!Target) #| (!Target:isAlive() & !Target:isVehicle()))
{
    applyForce(entity():vel()*100*entity():mass())
    #entity():setVel(entity():vel())
}
else
{
    Offset = Target:pos() - entity():pos()
    applyForce(Offset*10000*entity():mass())
    #entity():setVel(Offset*100*entity():mass())
}

soundPitch("Jingle",floor(entity():vel():length()/50))
soundPitch("YAAABAAA",floor(entity():vel():length()/50))

#Move over my head
#entity():freeze()
#Goto = owner():pos()+vec(0,0,100)+(owner():eye()*100)
#entity():setPosition(Goto)
#entity():applyForce($Goto*15+Goto)
