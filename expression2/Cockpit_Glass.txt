@name Cockpit Glass
@inputs
@outputs 
@persist Mod X Glass:entity Base:entity
@trigger 

if(first())
{
    Base = entity():isWeldedTo()
    findByModel("models/smallbridge/ship parts/sbcockpit2or.mdl")
    Glass = findClosest(Base:pos())
    Glass:freeze()
    holoCreate(1)
    holoPos(1,Base:toWorld(vec(-Base:boxSize():x()/2 + 4.8,0,Base:boxSize():z()/2)))
    holoAng(1,Base:angles())
    holoParent(1,Base)
    
    holoCreate(2)
    holoPos(2,Glass:toWorld(vec(-Glass:boxSize():x()/2 + 0,0,Base:boxSize():z()/2)))
    holoAng(2,Glass:angles())
    Glass:parentTo(holoEntity(2))
    
    function parent()
    {
        holoPos(2,holoEntity(1):pos())
        holoAng(2,holoEntity(1):angles())
        holoParent(2,1)
    }
    timer(100,1,"parent","parent()")
    
    function move()
    {
        local A = X
        X = clamp(A+Mod*2,0,90)
        holoAng(2,holoEntity(1):toWorld(ang(-X,0,0)))
        if(X==0||X==90){}else{
            timer(100,1,"move","move()")
        }
    }
    runOnLast(1)
    runOnChat(1)
}
if(chatClk())
{
    if(lastSpoke():lastSaid()=="Open The Damn Door!")
    {
        Mod = (Mod==1 ? -1 : 1)
        move()
    }
}

if(last())
{
    Glass:deparent()
}
