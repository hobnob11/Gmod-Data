@name Bezier Curve
@outputs 
@outputs T Inc StepDist
@persist [StartPos EndPos LastPos]:vector NumProps [P0 P1 P2 P3]:vector [E1 E2]:entity
@persist IDX N R:array Nodes:array Safe Target:entity String:string
@trigger 
if(dupefinished())
{
    reset()
}
if(first())
{
    findIncludePlayerProps(owner())
    findInCone(entity():pos(),entity():up(),10000000000000000,90)
    findClipToClass("gmod_wire_expression2")
    findSortByDistance(entity():pos())
    local Array = findToArray()
    foreach(K,V:entity = Array)
    {
        if(V:getName()==entity():getName()){
            Target = V
            break
        }
    }
    Nodes=array(entity():isWeldedTo(),Target:isWeldedTo())
    propSpawnUndo(1)
    if(Nodes:count()==2)
    {
        
        E1 = Nodes[1,entity]
        E2 = Nodes[2,entity]
        
        local Offset = 0#-E1:boxSize():z()/2.1
        
        P0 = E1:toWorld(vec(0,0,Offset))
        P3 = E2:toWorld(vec(0,0,Offset))
        
        local L = P0:distance(P3)
        P1 = E1:toWorld(vec(L/2,0,Offset))
        P2 = E2:toWorld(vec(L/2,0,Offset))
        
        
    }
    Inc=0.0001
    if(entity():pos():distance(Target:pos())>1000){
        StepDist = 222/1.5 #First number is length of prop
        String = "models/smallbridge/hulls_sw/sbhulle1.mdl"
    }else{
        StepDist = 111/1.5 #First number is length of prop
        String = "models/smallbridge/hulls_sw/sbhulle05.mdl"
    }
    print(E1:pos():distance(E2:pos()))
    function vector bezier4(P0:vector, P1:vector, P2:vector, P3:vector, Step)
    {
        return P0*(1-Step)^3+3*P1*Step*(1-Step)^2+3*P2*Step^2*(1-Step)+Step^3*P3
    }
    
    StartPos = bezier4(P0,P1,P2,P3,0)
    EndPos = bezier4(P0,P1,P2,P3,1)
    Distance = StartPos:distance(EndPos)
    runOnLast(1)
}
interval(100)
while(LastPos:distance(EndPos) > StepDist & perf() & holoCanCreate())
{
    
    T+=Inc
    local V = bezier4(P0,P1,P2,P3,T)
    if(V:distance(LastPos)>StepDist)
    {
        local E = propSpawn(String,1)
        if(E)
        {
            R:pushEntity(E)
            local A = (bezier4(P0,P1,P2,P3,T+Inc) - V):toAngle()
            LastPos = V
            E:setPos(V)
            E:setAng(A:rotateAroundAxis(A:up()*100,0):rotateAroundAxis(-A:forward()*100,0))
            E:propPhysicalMaterial("ice")
            E:combatImmune(1)
            E:setSkin(3)
            E:weld(E1)
            N++
        }
        else
        {
            T-=Inc
        }
    }
}
if(LastPos:distance(EndPos) < StepDist&holoCanCreate()&Target:isValid())
{
    Safe = 1
    Target:propDelete()
    selfDestruct()
}
if(last())
{
    if(!Safe){
        R:propDelete()
    }
}
