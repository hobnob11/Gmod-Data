{"1":{"filename":"HobModV3.txt","code":"--@name HobModV3\n--@author Hobnob\n--@shared\n\nif CLIENT then \n    \n    MenuOpen = false\n    \n    function Sanity()\n        local ret = false\n        try(function() ret = (Menu ~= nil and Menu:IsValid()) end, function(error) print(error)  end)\n        return ret\n    end\n    function CreateMenu()\n        if not Sanity() then\n            ContextMenuOpen = false\n            Menu = vgui.Create(\"DMenu\") \t\t\n            Menu:AddOption( \"Simple option\" ) \n            Menu:AddOption( \"Option with icon\" ):SetIcon( \"icon16/bug.png\" )\n            Menu:AddSpacer()\n            Menu:AddSubMenu( \"A Sub Menu\" ):AddOption( \"Sub Option #1\" ):SetIcon( \"icon16/group.png\" )\n            Menu:SetBackgroundColor(Color(255,255,255,255))\n            Menu:SetVisible(false)\n        end\n    end\n    function OpenMenu()\n        print(\"Open\",Sanity())\n        CreateMenu()\n        if Sanity() then Menu:Open() end\n    end\n    function CloseMenu()\n        print(\"Close\",Sanity())\n        if Sanity() then\n            try(function()\n                Menu:Remove()\n            end,function(a)\n                print(a)\n            end)\n        end\n    end\n\n    hook.Add(\"PlayerButtonDown\",\"HobHookDown\",function(a,b)\n        if a == entities.owner() and b == 12 then\n            if not MenuOpen then\n                MenuOpen = true\n                OpenMenu()\n            end\n        end\n    end)\n    hook.Add(\"PlayerButtonUp\",\"HobHookUp\",function(a,b)\n        if a == entities.owner() and b == 12 then\n            if  MenuOpen then\n                MenuOpen = false\n                CloseMenu()\n            end\n        end\n    end)\nend"},"2":{"filename":"HobDebugLib.txt","code":"--@name HobDebugLib\n--@author \n--@shared\n\nHobDebug = {}\nHobDebug.Level = 3 -- defualt to aww hell naw\n-- 0 = debug - prepare for spam\n-- 1 = warn - well that probably shouldent of happened\n-- 2 = error - shits broke yo\n-- 3 = aww hell naw - SHITS BAD YO.\nif SERVER then\n    function HobDebug.PrintError(level, header, message)\n        net.Start(\"HobDebugError\")\n        net.WriteUInt(level,2)\n        net.WriteString(header)\n        net.WriteString(message)\n        net.Send(entities.owner())\n    end\n    function HobDebug.SetDebugLevel(level)\n        level = math.Clamp(level,0,3)\n        net.Start(\"HobDebugSetLevel\")\n        net.WriteUInt(level,2)\n        net.Send(entities.owner())\n        HobDebug.Level = level\n    end\nelse\n    HobDebug.Errors = {}\n    hook.Add(\"net\",\"DebugHook\",function(name,length)\n        local level = net.ReadUInt(2)\n        local header= net.ReadString()\n        local message=net.ReadString()\n        table.insert(HobDebug.Errors,{level,header,message})\n    end)\n    DebugConsole = vgui.Create(\"DFrame\")\nend"},"selectedTab":1}