{"1":{"filename":"Hoboscope.txt","code":"--@name Hoboscope\n--@author Hob\n--@shared\n--@inputs X:Normal Entity:Entity\n \nif SERVER then\n    hook.Add(\"think\",\"wireUpdate\",function()\n        if net.CanSend() then \n            net.Start(\"wireUpdate\")\n            net.WriteInt(wire.ports[\"Entity\"]:EntIndex(),32)\n            net.Send()\n        end\n    end)\n    entities.self():SetAngles(Angle(90,180,0))\nelseif CLIENT then\n    HEH = 0\n    Plots = {}\n    Axis = {}\n    Ent = entities.self()\n    function DrawAxis(X1,X2,Y1,Y2)\n        Axis = {X1=X1,Y1=Y1,X2=X2,Y2=Y2}\n        local YPos\n        local XPos\n        if X1>=0 then\n            XPos = 56\n        elseif X2<=0 then\n            XPos = 456\n        else\n            XPos = math.Round((math.abs(X1) / (math.abs(X1)+X2))*400) + 56\n        end\n        if Y1>=0 then\n            YPos = 56\n        elseif Y2<=0 then\n            YPos = 456\n        else\n            YPos = math.Round((math.abs(Y1) / (math.abs(Y1)+Y2))*400) + 56\n        end\n       \n        render.DrawLine(56,YPos,456,YPos) --X Axis\n        --X Axis Lines\n        local K = (456 - YPos)/10\n        local J = K - 40\n        for I = J,K do\n            render.DrawLine(I*10+YPos,YPos-3,I*10+YPos,YPos+3)\n        end\n        \n        render.DrawLine(XPos,56,XPos,456) --Y Axis\n        --Y Axis Lines\n        local K = (456 - XPos)/10\n        local J = K - 40\n        for I = J,K do\n            render.DrawLine(XPos-3,I*10+XPos,XPos+3,I*10+XPos)\n        end\n    end\n   \n    function Plot(line,x,y)\n        if not Plots[line] then \n            Plots[line] = {}\n        end\n        local i = table.getn(Plots[line])\n        if i >= 160 then\n            table.remove(Plots[line],1)\n        end\n        --Plots[line][i+1] = {x=x,y=y}\n        table.insert(Plots[line],{x=x,y=y})\n        \n    end\n    \n    function DrawLine(line,colour)\n        render.SetColor(colour)\n        local x = 0\n        local y = 0\n        for k,v in pairs(Plots[line]) do\n            local Height = math.abs(Axis.Y1) + math.abs(Axis.Y2)\n            local Width  = math.abs(Axis.X1) + math.abs(Axis.X2)\n            xt = x\n            yt = y\n            x = (v.x / Width) * 400 + 56\n            y = (v.y / Height) * 400 + 256\n            --print(x,y)\n            if xt==0 or yt ==0 or xt > x then\n                render.DrawLine(x,y,x+1,y+1)\n            else\n                render.DrawLine(x,y,xt,yt)\n            end\n        end\n        render.DrawText(x,y,line..\": \"..math.Round(table.GetLastValue(Plots[line]).y),0)\n    end\n    \n    hook.Add(\"net\",\"WireUpdate\",function(name)\n        if name == \"wireUpdate\" then\n            Ent = entities.entity(net.ReadInt(32))\n        end\n    end)\n\n    hook.Add(\"render\",\"ScreenRender\",function()\n        if HEH%2 == 0 then\n            local Anglu = Ent:GetAngles()\n            --print(Anglu)\n            render.Clear()\n            DrawAxis(0,100,-100,100)\n            Plot(\"Height\",CurTime()%100,Ent:GetPos().z-11300)\n            DrawLine(\"Height\",Color(255,0,0))\n            Plot(\"X\",CurTime()%100,Ent:GetPos().x +10100)\n            DrawLine(\"X\",Color(0,255,0))\n            Plot(\"Y\",CurTime()%100,Ent:GetPos().y+13000)\n            DrawLine(\"Y\",Color(255,0,255))\n        end\n        HEH = HEH + 1\n    end)\nend"},"2":{"filename":"HoverChair.txt","code":"    --@name HoverChair\n--@author Hobnob\n--@shared\n--@include lib/pid.txt\n\n--Both Sides - Shared\nrequire(\"lib/pid.txt\")\n\nif SERVER then\n    --ServerSide\n    entities.self():SBSetGravityOverride(true)\n    entities.self():EnableGravity(false)\n    Base = entities.self():IsWeldedTo()\n    Base:SBSetGravityOverride(false)\n    Base:EnableGravity(true)\n    Player= Base:GetClass() == \"Vehicle\" and Base:GetDriver() or nil\n    \n    --makin mah own apply ang force, with less crash\n    function applyAngForce(E,Ang)\n        local p = Ang.p\n        local y = Ang.y\n        local r = Ang.r\n        --pitch\n        E:ApplyForceOffset(Vector(0,0,p),E:LocalToWorld(Vector(1,0,0)))\n        E:ApplyForceOffset(Vector(0,0,-p),E:LocalToWorld(Vector(-1,0,0)))\n        --yaw\n        E:ApplyForceOffset(Vector(y,0,0),E:LocalToWorld(Vector(0,1,0)))\n        E:ApplyForceOffset(Vector(-y,0,0),E:LocalToWorld(Vector(0,-1,0)))\n        --roll\n        E:ApplyForceOffset(Vector(0,0,r),E:LocalToWorld(Vector(0,1,0)))\n        E:ApplyForceOffset(Vector(0,0,-r),E:LocalToWorld(Vector(0,-1,0)))\n    end\n    \n    --create angle pid's \n    Pids = {} --P,I,D,Min,Max,Target\n    Pids.Pitch = PID(1000,10,50,-1000,1000,0)\n    Pids.Yaw   = PID(1000,10,50,-1000,1000,0)--------------------------------\n    Pids.Roll  = PID(1000,10,50,-1000,1000,0)\n    Pids.Thrust= PID(10*50,5*50,5*50,-5000*50,5000*50,0)\n    Pids.X= PID(10*50,5*50,5*50,-5000*50,5000*50,0)\n    Pids.Y= PID(10*50,5*50,5*50,-5000*50,5000*50,0)\n    function Main()\n        --run the pid math\n        Pt = Pids.Pitch:Run(Base:GetAngles().p)\n        Yt = Pids.Yaw:Run(Base:GetAngles().y)\n        Rt = Pids.Roll:Run(Base:GetAngles().r)\n        Tt = Pids.Thrust:Run(Base:GetPos().z-11300)\n        Xt = Pids.X:Run(Base:GetPos().x+10100)\n        Yts = Pids.Y:Run(Base:GetPos().y+13000)\n        --ApplyAngForce\n        --applyAngForce(Base,Angle(0,0,1000))\n        Base:ApplyAngForce(Angle(Pt,Yt,Rt))\n        Base:ApplyForceCenter(Vector(Xt,Yts,Tt))\n    end\n    \n    hook.Add(\"think\",\"thinku\",function()\n        Main()\n    end)\nelse\n    --ClientSide\nend"},"3":{"filename":"HoverChair.txt","code":"    --@name HoverChair\n--@author Hobnob\n--@shared\n--@include lib/pid.txt\n\n--Both Sides - Shared\nrequire(\"lib/pid.txt\")\n\nif SERVER then\n    --ServerSide\n    entities.self():SBSetGravityOverride(true)\n    entities.self():EnableGravity(false)\n    Base = entities.self():IsWeldedTo()\n    Base:SBSetGravityOverride(false)\n    Base:EnableGravity(true)\n    Player= Base:GetClass() == \"Vehicle\" and Base:GetDriver() or nil\n    \n    --makin mah own apply ang force, with less crash\n    function applyAngForce(E,Ang)\n        local p = Ang.p\n        local y = Ang.y\n        local r = Ang.r\n        --pitch\n        E:ApplyForceOffset(Vector(0,0,p),E:LocalToWorld(Vector(1,0,0)))\n        E:ApplyForceOffset(Vector(0,0,-p),E:LocalToWorld(Vector(-1,0,0)))\n        --yaw\n        E:ApplyForceOffset(Vector(y,0,0),E:LocalToWorld(Vector(0,1,0)))\n        E:ApplyForceOffset(Vector(-y,0,0),E:LocalToWorld(Vector(0,-1,0)))\n        --roll\n        E:ApplyForceOffset(Vector(0,0,r),E:LocalToWorld(Vector(0,1,0)))\n        E:ApplyForceOffset(Vector(0,0,-r),E:LocalToWorld(Vector(0,-1,0)))\n    end\n    \n    --create angle pid's \n    Pids = {} --P,I,D,Min,Max,Target\n    Pids.Pitch = PID(100,0,50,-1,1,0)\n    Pids.Yaw   = PID(100,0,50,-1,1,0)--------------------------------\n    Pids.Roll  = PID(100,0,50,-1,1,0)\n    Pids.Thrust= PID(10*50,5*50,5*50,-5000*50,5000*50,0)\n    Pids.X= PID(10*50,5*50,5*50,-5000*50,5000*50,0)\n    Pids.Y= PID(10*50,5*50,5*50,-5000*50,5000*50,0)\n    function Main()\n        --run the pid math\n        Pt = Pids.Pitch:Run(Base:GetAngles().p)\n        Yt = Pids.Yaw:Run(Base:GetAngles().y)\n        Rt = Pids.Roll:Run(Base:GetAngles().r)\n        Tt = Pids.Thrust:Run(Base:GetPos().z-11300)\n        Xt = Pids.X:Run(Base:GetPos().x+10100)\n        Yts = Pids.Y:Run(Base:GetPos().y+13000)\n        --ApplyAngForce\n        --applyAngForce(Base,Angle(0,0,1000))\n        Base:ApplyAngForce(Angle(Pt,Yt,Rt))\n        Base:ApplyForceCenter(Vector(Xt,Yts,Tt))\n    end\n    \n    hook.Add(\"think\",\"thinku\",function()\n        Main()\n    end)\nelse\n    --ClientSide\nend"},"4":{"filename":"AWeaponToSurpass.txt","code":"--@name AWeaponToSurpass\n--@author \n--@include lib/pid.txt\n\nrequire(\"lib/pid.txt\")\n\nif SERVER then \n    wire.adjustInputs({\"Base\",\"L\",\"R\"},{\"Entity\",\"Entity\",\"Entity\"})\n    wire.adjustOutputs({\"Mul\",\"LVec\",\"RVec\",\"RO\",\"LO\"},{\"normal\",\"Vector\",\"Vector\",\"Angle\",\"Angle\"})\n    local E = entities.self():IsWeldedTo()\n    L = wire.ports[\"L\"]\n    R = wire.ports[\"R\"]\n    local Home = E:GetPos()\n    Mass = 0\n    for k,v in pairs(E:GetAllConstrainedEnts()) do\n        Mass = Mass + v:GetMass()\n    end\n    Mass = Mass / #L:GetAllConstrainedEnts()\n    Mul = 100\n    MulPid = PID(0.981*Mass,0.075*Mass,0.2*Mass,0,0.2*Mass,Home.z)\n    YawPid = PID(0.1,0,0.2,-1,1,0)\n    XPid = PID(0.1,0,0.2,-1,1,0)\n    YPid = PID(0.1,0,0.2,-1,1,0)\n    Sound = sounds.Create(E,\"ls/generators/pulsetone.mp3\")\n    Sound:Play()\n    hook.Add(\"think\",\"think\",function()\n        \n        Home = entities.owner():GetPos()+Vector(0,0,100)\n        \n        local YawSet = YawPid:Run(E:GetAngles().y)\n        local Xset = -XPid:Run(E:GetPos().x - Home.x)\n        local Yset = -YPid:Run(E:GetPos().y - Home.y)\n        \n        LPitch = math.Clamp(-Xset+YawSet,-25,25)\n        LYaw = 0\n        LRoll = math.Clamp(Yset,-25,25)\n        LOffset = Angle(LPitch,LYaw,LRoll)\n        \n        RPitch = math.Clamp(-Xset-YawSet,-25,25)\n        RYaw = 0\n        RRoll = math.Clamp(Yset,-25,25)\n        ROffset = Angle(RPitch,RYaw,RRoll)\n\n        wire.ports[\"LVec\"] = L:WorldToLocal(L:GetPos()-LOffset:Up())\n        wire.ports[\"RVec\"] = R:WorldToLocal(R:GetPos()-ROffset:Up())\n        Mul =  MulPid:Run(E:GetPos().z)\n        wire.ports[\"Mul\"] = Mul\n        \n        wire.ports[\"LO\"] = LOffset\n        wire.ports[\"RO\"] = ROffset\n        \n        Sound:ChangePitch(math.Clamp(Mul/Mass*250,50,250),0)\n\n        \n    end)\nend"},"5":{"filename":"Heh.txt","code":"--@name HobScreen\n--@author\n--@shared\n \nif SERVER then\n   \n   \nelse\n    \n    --Players that can see the overview\n    Memers = {\"H08\",\"Kan\",\"Err\"}\n    function IsMemer(Ent) for I =1,#Memers do if Ent == FindPlayerByName(Memers[I]) then return true end end return false end\n        \n    if IsMemer(entities.player()) then\n        Players = find.AllPlayers()\n        LPly = entities.player()\n        TeamColours ={\n            Color(255,255,255), -- 1 ?\n            Color(255,255,255), -- 2 ?\n            Color(255,255,255), -- 3 ?\n            Color(100,255,100), -- 4 Player\n            Color(255,0,0), -- 5 Administrator\n            Color(255,255,0), -- 6 Respected Player\n            Color(255,255,255)} -- clamp\n       \n        surface.CreateFont(\"Memes\",{\n            underline = true})\n       \n        hook.Add(\"HUDPaint\",\"screenhook\",function()\n            --players\n            if(#Players > 0)then\n                for _,P in pairs(Players) do\n                    if(P ~= nil and P:IsValid()) then\n                        if P~=entities.player() then\n                            local toScrn = (P:OBBCenterW()+Vector(0,0,P:OBBSize().z/2 + 10)):ToScreen()\n                            local pos = {x=math.Clamp(toScrn.x,100,surface.ScreenW()-100),y=math.Clamp(toScrn.y,100,surface.ScreenH()-100)}\n                            if(P:Team()) then\n                                surface.SetTextColor(TeamColours[math.Clamp(P:Team(),1,7)])\n                            end\n                            surface.SetFont(\"Default\")\n                            local w,h =surface.GetTextSize(P:GetName())\n                            surface.SetTextPos(pos.x -w/2,pos.y+10)\n                            surface.DrawText(P:GetName())\n                        end\n                    end\n                end\n            end\n        end)\n       \n        timer.Create(\"refresh\",30,0,function()\n            Players = find.AllPlayers()\n        end)\n    end\nend"},"6":{"filename":"generic.txt","code":"--@name \n--@author \nif SERVER then \n    \nend"},"selectedTab":6}