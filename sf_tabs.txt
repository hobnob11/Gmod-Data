{"1":{"code":"--@name \n--@author \n\n--[[\n\tStarfall Scripting Environment\n\n\tMore info: http://inpstarfall.github.io/Starfall\n\tGithub: http://github.com/INPStarfall/Starfall\n\tReference Page: http://sf.inp.io\n\tDevelopment Thread: http://www.wiremod.com/forum/developers-showcase/22739-starfall-processor.html\n\n\tDefault Keyboard shortcuts: https://github.com/ajaxorg/ace/wiki/Default-Keyboard-Shortcuts\n]]"},"2":{"filename":"projects/planet/Planet.txt","code":""},"3":{"filename":"lib/hob.txt","code":"--hob lib, because fuck writing this shit constantly \r\n--@name YOU PASTED THE FUCKING LIB U FUCK\r\n\r\nif SERVER then\r\n    \r\n    --Gets closest Planet\r\n    function FindClosestPlanet(Pos)\r\n        local Planets = ls.GetPlanets()\r\n        local Dist = 1e9\r\n        local Return\r\n        \r\n        for K,V in pairs(Planets) do\r\n            if V:GetPos():Distance(Pos) < Dist then\r\n                Return = V\r\n                Dist = V:GetPos():Distance(Pos)\r\n            end\r\n        end\r\n        return Return\r\n    end\r\n    \r\n    --Overrides Print to not cause lua errors -.-\r\n    function Print(...)\r\n        \r\n        \r\n    end\r\nend"},"4":{"filename":"lib/unique.txt","code":"--@name unique\r\n--@author Hobnob\r\n--@shared\r\nif CLIENT then\r\n    \r\n    function Unique()\r\n        if not globaltables.player then\r\n            globaltables.player = {}\r\n        end\r\n        gt = globaltables.player\r\n        local ret = not gt[1]\r\n        table.insert(gt,not gt[1])\r\n        timer.Simple(0.5,function() \r\n            globaltables.player = {}\r\n        end)\r\n        return ret\r\n    end\r\n        \r\nend\r\n"},"5":{"filename":"lib/HobDebugLib.txt","code":"--@name HobDebugLib\r\n--@author\r\n--@shared\r\n--@include lib/unique.txt\r\nrequire(\"lib/unique.txt\")\r\n \r\nHobDebug = {}\r\nHobDebug.Level = 0 -- defualt to aww hell naw\r\nHobDebug.SrcSize = {x=1768,y=992}\r\nHobDebug.Icons = {\"icon16/bug.png\",\"icon16/bug_error.png\",\"icon16/error.png\",\"icon16/exclamation.png\"}\r\n-- 0 = debug - prepare for spam\r\n-- 1 = warn - well that probably shouldent of happened\r\n-- 2 = error - shits broke yo\r\n-- 3 = aww hell naw - SHITS BAD YO.\r\nif SERVER then\r\n    function HobDebug.PrintError(level, header, message)\r\n        net.Start(\"HobDebugError\")\r\n        net.WriteUInt(level,2)\r\n        net.WriteString(header)\r\n        net.WriteString(message)\r\n        net.Send(entities.owner())\r\n    end\r\n    function HobDebug.SetDebugLevel(level)\r\n        level = math.Clamp(level,0,3)\r\n        net.Start(\"HobDebugSetLevel\")\r\n        net.WriteUInt(level,2)\r\n        net.Send(entities.owner())\r\n        HobDebug.Level = level\r\n \r\n    end\r\n    timer.Simple(2,function()\r\n        HobDebug.PrintError(3,\"oh noes\",\"you have fucked up now.\")\r\n    end)\r\n    timer.Simple(3,function()\r\n        HobDebug.PrintError(3,\"pls no\",\"you have fucked up now.\")\r\n    end)\r\n    timer.Simple(4,function()\r\n        HobDebug.PrintError(2,\"aie\",\"this is like mostly bad.\")\r\n    end)\r\n    timer.Simple(5,function()\r\n        HobDebug.PrintError(1,\"meh.\",\"no one cares about this.\")\r\n    end)\r\n    timer.Simple(6,function()\r\n        HobDebug.PrintError(0,\"debugh.\",\"spaaaaaaam\")\r\n    end)\r\nelseif CLIENT and Unique() then\r\n    HobDebug.Errors = {}\r\n    hook.Add(\"net\",\"DebugHook\",function(name,length)\r\n        if name == \"HobDebugError\" then\r\n            local level = net.ReadUInt(2)\r\n            local header= net.ReadString()\r\n            local message=net.ReadString()\r\n            table.insert(HobDebug.Errors,{level,header,message})\r\n            UpdateDebug()\r\n        elseif name == \"HobDebugSetLevel\" then\r\n            local level = net.ReadUInt(2)\r\n            HobDebug.Level = level\r\n            UpdateDebug()\r\n        end\r\n    end)\r\n    function CreateWindow()\r\n        HobDebug.DebugConsole = vgui.Create(\"DFrame\")\r\n        local dc = HobDebug.DebugConsole\r\n        local ss = HobDebug.SrcSize\r\n        dc:SetSkin(\"Default\")\r\n        dc:SetTitle(\"Hob-Co Debug Console\")\r\n        dc:SetSize(550,300)\r\n        dc:SetPos(ss.x-550,ss.y-400)\r\n        dc.List = vgui.Create(\"DListView\",dc)\r\n        dc.List:SetMultiSelect( false )\r\n        dc.List:SetSize(530,265)\r\n        dc.List:SetPos(10,25)\r\n        dc.List.Level   = dc.List:AddColumn( \"Lvl\" )\r\n            dc.List.Level:SetMinWidth(18)\r\n            dc.List.Level:SetMaxWidth(18)\r\n        dc.List.Title   = dc.List:AddColumn( \"Title\" )\r\n            dc.List.Title:SetMinWidth(128)\r\n            dc.List.Title:SetMaxWidth(128)\r\n        dc.List.Message = dc.List:AddColumn( \"Message\" )\r\n       \r\n    end\r\n    function UpdateDebug()\r\n        local l = HobDebug.DebugConsole.List\r\n        l:Clear()\r\n        for _,e in pairs(HobDebug.Errors) do\r\n            if e[1] >= HobDebug.Level then\r\n                local item = l:AddLine(unpack(e))\r\n                local mat = Material(HobDebug.Icons[e[1]+1])\r\n                function item:PaintOver(width,height)\r\n                    surface.SetDrawColor(Color(255,255,255,255))\r\n                    surface.SetMaterial(mat)\r\n                    surface.DrawTexturedRect(1,1,height-2,height-2)\r\n                end\r\n            end\r\n        end\r\nend\r\n    function HobDebug.SetDebugLevel(level)\r\n        HobDebug.Level = level\r\n    end\r\n    function HobDebug.PrintError(level, header, message)\r\n        table.insert(HobDebug.Errors,{level,header,message})\r\n        UpdateDebug()\r\n    end\r\n \r\n    CreateWindow()\r\n   \r\n   \r\n   \r\n    hook.Add(\"Removed\",\"onLast\",function()\r\n        HobDebug.DebugConsole:Remove()\r\n    end)\r\nend"},"6":{"filename":"lib/pid.txt","code":"--@name pid\r\n--@author Hobnob\r\n--@shared\r\n\r\nPID = {}\r\nPID.__index = PID\r\n\r\nsetmetatable(PID, { \r\n    __call = function(cls,...)\r\n        local self = setmetatable({},cls)\r\n        self:_init(...)\r\n        return self\r\n    end,\r\n})\r\n\r\nfunction PID:_init(P,I,D,Min,Max,Target) --min max are for I, smaller ranges increase reaction time but decrease maximum change speed. \r\n    self.P = P\r\n    self.I = I\r\n    self.D = D\r\n    self.Min = Min\r\n    self.Max = Max\r\n    self.Target = Target\r\n    self.T = CurTime()\r\n    self.Error = 0\r\n    self.Pt = 0\r\n    self.It = 0\r\n    self.Dt = 0\r\nend\r\n\r\n--accessors or gtfo. \r\nfunction PID:SetP(P) self.P = P end\r\nfunction PID:GetP() return self.P end\r\n\r\nfunction PID:SetI(I) self.I = I end\r\nfunction PID:GetI() return self.I end\r\n\r\nfunction PID:SetD(D) self.D = D end\r\nfunction PID:GetD() return self.D end\r\n\r\nfunction PID:SetMin(Min) self.Min = Min end\r\nfunction PID:GetMin() return self.Min end\r\n\r\nfunction PID:SetMax(Max) self.Max = Max end\r\nfunction PID:GetMax() return self.Max end\r\n\r\nfunction PID:SetTarget(Target) self.Target = Target end\r\nfunction PID:GetTarget() return self.Target end\r\n\r\nfunction PID:Run(Current)\r\n    self.DeltaT = CurTime() - self.T\r\n    self.T = CurTime()\r\n    self.DeltaError = (self.Target - Current) - self.Error\r\n    self.Error = (self.Target - Current)\r\n    self.Pt = self.P * self.Error\r\n    self.Dt = self.D*self.DeltaError/self.DeltaT\r\n    self.It = math.Clamp(self.It + self.I * self.Error * self.DeltaT,self.Min,self.Max)\r\n    return self.Pt + self.It + self.Dt\r\nend"},"7":{"filename":"projects/plane/plane.txt","code":"--@name Plane\r\n--@author \r\n--@shared\r\n\r\nif SERVER then\r\n    \r\n    Throttle = 0\r\n    W = 0\r\n    A = 0\r\n    S = 0\r\n    D = 0\r\n    Shift = 0\r\n    Space = 0\r\n    Seat = 817\r\n    Driver = entities.entity(Seat):GetDriver() \r\n    Mass = 0\r\n    for K,V in pairs(entities.self():GetAllConstrainedEnts()) do\r\n        Mass = Mass + V:GetMass()\r\n    end\r\n    Text = \"\"\r\n    Offset = Vector(0,0,0)\r\n    function NetworkVars()\r\n        if net.CanSend() then\r\n            net.Start(\"Throttle\")\r\n            net.WriteDouble(Throttle)\r\n            if Driver:IsValid() then\r\n                net.WriteInt(Driver:EntIndex(),8)\r\n            else\r\n                net.WriteInt(-1,8)\r\n            end\r\n            net.WriteString(Text)\r\n            net.Send()\r\n        end\r\n    end\r\n    \r\n    hook.Add(\"KeyPress\",\"HobPress\",function(ply,key)\r\n        if ply == Driver then\r\n            if key == 8 then\r\n                W = 1\r\n            elseif key == 512 then\r\n                A = 1\r\n            elseif key == 16 then\r\n                S = 1\r\n            elseif key == 1024 then\r\n                D = 1\r\n            elseif key == 131072 then\r\n                Shift = 1\r\n            elseif key == 2 then\r\n                Space = 1\r\n            end\r\n        end\r\n    end)\r\n    hook.Add(\"KeyRelease\",\"HobRelease\",function(ply,key)\r\n        if ply == Driver then\r\n            if key == 8 then\r\n                W = 0\r\n            elseif key == 512 then\r\n                A = 0\r\n            elseif key == 16 then\r\n                S = 0\r\n            elseif key == 1024 then\r\n                D = 0\r\n            elseif key == 131072 then\r\n                Shift = 0\r\n            elseif key == 2 then\r\n                Space = 0\r\n            end\r\n        end\r\n    end)\r\n    \r\n    Holo = holograms.create(entities.self():GetPos(),Angle(0,0,0),\"models/hunter/blocks/cube025x025x025.mdl\",Vector(1,1,1))\r\n    Holo:SetColor(Color(255,0,0))\r\n    hook.Add(\"Think\",\"HobThink\",function() \r\n        \r\n        local ThrstMul = 50 * Mass\r\n        local PitchMul = 5 * Mass\r\n        local YawMul = 5 * Mass\r\n        local RollMul = 500 * Mass\r\n        \r\n        --internal vars\r\n        local Ent = entities.self():IsWeldedTo()\r\n        Driver = entities.entity(Seat):GetDriver() \r\n        Throttle = math.Clamp(Throttle + W/100 - S/100, 0 , 1)\r\n        if Driver:IsValid() then \r\n            Holo:setPos(Driver:EyePos() + Driver:EyeAngles():Forward()*500 +Offset)\r\n            Ang = (Driver:EyePos() - Holo:GetPos()):Angle()\r\n            Ang[2] = Ang[2] - Ent:GetAngles()[2]\r\n            Ang[2] = Ang[2] + 90\r\n            Ang[1] = Ang[1] - Ent:GetAngles()[3]\r\n            Ang:Normalize()\r\n            Text = \"Pitch: \" .. math.Round(Ang[1]) .. \" Yaw: \" .. math.Round(Ang[2]) .. \" Roll: \" .. (D-A)\r\n            Ent:ApplyAngForce(Angle(RollMul*(D-A),YawMul*Ang[2],PitchMul*Ang[1]))\r\n            Ent:ApplyForceCenter(-Ent:GetRight()*ThrstMul*Throttle)\r\n        end\r\n        NetworkVars()\r\n    end)\r\n    \r\n\r\n\r\nelse\r\n    Driver = nil\r\n    Text = \"\"\r\n    hook.Add(\"net\",\"HobNet\",function(Name)\r\n        if Name == \"Throttle\" then\r\n            Throttle = net.ReadDouble()\r\n            Driver = entities.entity(net.ReadInt(8))\r\n            Text = net.ReadString()\r\n        end\r\n    end)\r\n    Throttle = 0.5\r\n    hook.Add(\"HUDPaint\",\"HobPaint\",function() \r\n        if entities.player() == Driver then\r\n            local w,h = surface.ScreenW(), surface.ScreenH()\r\n            surface.SetDrawColor(Color(200,200,200))\r\n            surface.DrawRect(21,h-160,290,30)\r\n            surface.SetDrawColor(Color(100,100,100))\r\n            surface.DrawRect(23,h-158,286*Throttle,26)\r\n            surface.SetTextColor(Color(255,255,255))\r\n            surface.SetTextPos(23,h-175)\r\n            surface.DrawText(Text)\r\n        end\r\n    end)\r\nend"},"8":{"filename":"HobBestThingy.txt","code":"--@name HobBestThingy\r\n--@author Hob\r\n--@sharedscreen\r\n\r\n\r\nif SERVER then\r\n\r\n    local Lasers = find.byClass(\"sc_weapon_base\",function(ent)\r\n                                                    return ent:getOwner() == entities.owner()\r\n                                                 end\r\n    )\r\n    for K,V in pairs(Lasers) do \r\n        V:setPos(entities.self():getPos()+Vector(-105 + K*10,0,200))\r\n        V:setAngles(Angle(-90,0,90))\r\n    end\r\n    \r\nelse\r\n    local Text = \"hi\"\r\n\r\n    hook.add(\"render\", \"RenderHook\", function()\r\n        render.clear()\r\n        render.setColor(Color(255,255,255,255))\r\n        render.drawText( 256, 256, Text, render.TEXT_ALIGN_CENTER)\r\n    end)\r\nend\r\n"},"9":{"filename":"Hoboscope.txt","code":"--@name Hoboscope\r\n--@author Hob\r\n--@shared\r\n--@inputs X:Normal Entity:Entity\r\n \r\nif SERVER then\r\n    hook.Add(\"think\",\"wireUpdate\",function()\r\n        if net.CanSend() then \r\n            net.Start(\"wireUpdate\")\r\n            net.WriteInt(wire.ports[\"Entity\"]:EntIndex(),32)\r\n            net.Send()\r\n        end\r\n    end)\r\n    entities.self():SetAngles(Angle(90,180,0))\r\nelseif CLIENT then\r\n    HEH = 0\r\n    Plots = {}\r\n    Axis = {}\r\n    Ent = entities.self()\r\n    function DrawAxis(X1,X2,Y1,Y2)\r\n        Axis = {X1=X1,Y1=Y1,X2=X2,Y2=Y2}\r\n        local YPos\r\n        local XPos\r\n        if X1>=0 then\r\n            XPos = 56\r\n        elseif X2<=0 then\r\n            XPos = 456\r\n        else\r\n            XPos = math.Round((math.abs(X1) / (math.abs(X1)+X2))*400) + 56\r\n        end\r\n        if Y1>=0 then\r\n            YPos = 56\r\n        elseif Y2<=0 then\r\n            YPos = 456\r\n        else\r\n            YPos = math.Round((math.abs(Y1) / (math.abs(Y1)+Y2))*400) + 56\r\n        end\r\n       \r\n        render.DrawLine(56,YPos,456,YPos) --X Axis\r\n        --X Axis Lines\r\n        local K = (456 - YPos)/10\r\n        local J = K - 40\r\n        for I = J,K do\r\n            render.DrawLine(I*10+YPos,YPos-3,I*10+YPos,YPos+3)\r\n        end\r\n        \r\n        render.DrawLine(XPos,56,XPos,456) --Y Axis\r\n        --Y Axis Lines\r\n        local K = (456 - XPos)/10\r\n        local J = K - 40\r\n        for I = J,K do\r\n            render.DrawLine(XPos-3,I*10+XPos,XPos+3,I*10+XPos)\r\n        end\r\n    end\r\n   \r\n    function Plot(line,x,y)\r\n        if not Plots[line] then \r\n            Plots[line] = {}\r\n        end\r\n        local i = table.getn(Plots[line])\r\n        if i >= 160 then\r\n            table.remove(Plots[line],1)\r\n        end\r\n        --Plots[line][i+1] = {x=x,y=y}\r\n        table.insert(Plots[line],{x=x,y=y})\r\n        \r\n    end\r\n    \r\n    function DrawLine(line,colour)\r\n        render.SetColor(colour)\r\n        local x = 0\r\n        local y = 0\r\n        for k,v in pairs(Plots[line]) do\r\n            local Height = math.abs(Axis.Y1) + math.abs(Axis.Y2)\r\n            local Width  = math.abs(Axis.X1) + math.abs(Axis.X2)\r\n            xt = x\r\n            yt = y\r\n            x = (v.x / Width) * 400 + 56\r\n            y = (v.y / Height) * 400 + 256\r\n            --print(x,y)\r\n            if xt==0 or yt ==0 or xt > x then\r\n                render.DrawLine(x,y,x+1,y+1)\r\n            else\r\n                render.DrawLine(x,y,xt,yt)\r\n            end\r\n        end\r\n        render.DrawText(x,y,line..\": \"..math.Round(table.GetLastValue(Plots[line]).y),0)\r\n    end\r\n    \r\n    hook.Add(\"net\",\"WireUpdate\",function(name)\r\n        if name == \"wireUpdate\" then\r\n            Ent = entities.entity(net.ReadInt(32))\r\n        end\r\n    end)\r\n\r\n    hook.Add(\"render\",\"ScreenRender\",function()\r\n        if HEH%2 == 0 then\r\n            local Anglu = Ent:GetAngles()\r\n            --print(Anglu)\r\n            render.Clear()\r\n            DrawAxis(0,100,-100,100)\r\n            Plot(\"Height\",CurTime()%100,Ent:GetPos().z-11300)\r\n            DrawLine(\"Height\",Color(255,0,0))\r\n            Plot(\"X\",CurTime()%100,Ent:GetPos().x +10100)\r\n            DrawLine(\"X\",Color(0,255,0))\r\n            Plot(\"Y\",CurTime()%100,Ent:GetPos().y+13000)\r\n            DrawLine(\"Y\",Color(255,0,255))\r\n        end\r\n        HEH = HEH + 1\r\n    end)\r\nend"},"10":{"filename":"HoverChair.txt","code":"    --@name HoverChair\r\n--@author Hobnob\r\n--@shared\r\n--@include lib/pid.txt\r\n\r\n--Both Sides - Shared\r\nrequire(\"lib/pid.txt\")\r\n\r\nif SERVER then\r\n    --ServerSide\r\n    entities.self():SBSetGravityOverride(true)\r\n    entities.self():EnableGravity(false)\r\n    Base = entities.self():IsWeldedTo()\r\n    Base:SBSetGravityOverride(false)\r\n    Base:EnableGravity(true)\r\n    Player= Base:GetClass() == \"Vehicle\" and Base:GetDriver() or nil\r\n    \r\n    --makin mah own apply ang force, with less crash\r\n    function applyAngForce(E,Ang)\r\n        local p = Ang.p\r\n        local y = Ang.y\r\n        local r = Ang.r\r\n        --pitch\r\n        E:ApplyForceOffset(Vector(0,0,p),E:LocalToWorld(Vector(1,0,0)))\r\n        E:ApplyForceOffset(Vector(0,0,-p),E:LocalToWorld(Vector(-1,0,0)))\r\n        --yaw\r\n        E:ApplyForceOffset(Vector(y,0,0),E:LocalToWorld(Vector(0,1,0)))\r\n        E:ApplyForceOffset(Vector(-y,0,0),E:LocalToWorld(Vector(0,-1,0)))\r\n        --roll\r\n        E:ApplyForceOffset(Vector(0,0,r),E:LocalToWorld(Vector(0,1,0)))\r\n        E:ApplyForceOffset(Vector(0,0,-r),E:LocalToWorld(Vector(0,-1,0)))\r\n    end\r\n    \r\n    --create angle pid's \r\n    Pids = {} --P,I,D,Min,Max,Target\r\n    Pids.Pitch = PID(100,0,50,-1,1,0)\r\n    Pids.Yaw   = PID(100,0,50,-1,1,0)--------------------------------\r\n    Pids.Roll  = PID(100,0,50,-1,1,0)\r\n    Pids.Thrust= PID(10*50,5*50,5*50,-5000*50,5000*50,0)\r\n    Pids.X= PID(10*50,5*50,5*50,-5000*50,5000*50,0)\r\n    Pids.Y= PID(10*50,5*50,5*50,-5000*50,5000*50,0)\r\n    function Main()\r\n        --run the pid math\r\n        Pt = Pids.Pitch:Run(Base:GetAngles().p)\r\n        Yt = Pids.Yaw:Run(Base:GetAngles().y)\r\n        Rt = Pids.Roll:Run(Base:GetAngles().r)\r\n        Tt = Pids.Thrust:Run(Base:GetPos().z-11300)\r\n        Xt = Pids.X:Run(Base:GetPos().x+10100)\r\n        Yts = Pids.Y:Run(Base:GetPos().y+13000)\r\n        --ApplyAngForce\r\n        --applyAngForce(Base,Angle(0,0,1000))\r\n        Base:ApplyAngForce(Angle(Pt,Yt,Rt))\r\n        Base:ApplyForceCenter(Vector(Xt,Yts,Tt))\r\n    end\r\n    \r\n    hook.Add(\"think\",\"thinku\",function()\r\n        Main()\r\n    end)\r\nelse\r\n    --ClientSide\r\nend"},"11":{"filename":"/projects/plane/plane.txt","code":"--@name Plane\n--@author \n--@shared\n\nif SERVER then\n    \n    Throttle = 0\n    W = 0\n    A = 0\n    S = 0\n    D = 0\n    Shift = 0\n    Space = 0\n    Seat = 479\n    Driver = entities.entity(Seat):GetDriver() \n    Mass = 0\n    for K,V in pairs(entities.self():GetAllConstrainedEnts()) do\n        Mass = Mass + V:GetMass()\n    end\n    Text = \"\"\n    Offset = Vector(0,0,0)\n    function NetworkVars()\n        if net.CanSend() then\n            net.Start(\"Throttle\")\n            net.WriteDouble(Throttle)\n            if Driver:IsValid() then\n                net.WriteInt(Driver:EntIndex(),8)\n            else\n                net.WriteInt(-1,8)\n            end\n            net.WriteString(Text)\n            net.Send()\n        end\n    end\n    \n    hook.Add(\"KeyPress\",\"HobPress\",function(ply,key)\n        if ply == Driver then\n            if key == 8 then\n                W = 1\n            elseif key == 512 then\n                A = 1\n            elseif key == 16 then\n                S = 1\n            elseif key == 1024 then\n                D = 1\n            elseif key == 131072 then\n                Shift = 1\n            elseif key == 2 then\n                Space = 1\n            end\n        end\n    end)\n    hook.Add(\"KeyRelease\",\"HobRelease\",function(ply,key)\n        if ply == Driver then\n            if key == 8 then\n                W = 0\n            elseif key == 512 then\n                A = 0\n            elseif key == 16 then\n                S = 0\n            elseif key == 1024 then\n                D = 0\n            elseif key == 131072 then\n                Shift = 0\n            elseif key == 2 then\n                Space = 0\n            end\n        end\n    end)\n    \n    Holo = holograms.create(entities.self():GetPos(),Angle(0,0,0),\"models/hunter/blocks/cube025x025x025.mdl\",Vector(1,1,1))\n    Holo:SetColor(Color(255,0,0))\n    hook.Add(\"Think\",\"HobThink\",function() \n        \n        local ThrstMul = 50 * Mass\n        local PitchMul = 5 * Mass\n        local YawMul = 5 * Mass\n        local RollMul = 500 * Mass\n        \n        --internal vars\n        local Ent = entities.self():IsWeldedTo()\n        Driver = entities.entity(Seat):GetDriver() \n        Throttle = math.Clamp(Throttle + W/100 - S/100, 0 , 1)\n        if Driver:IsValid() then \n            Holo:setPos(Driver:EyePos() + Driver:EyeAngles():Forward()*500 +Offset)\n            Ang = (Driver:EyePos() - Holo:GetPos()):Angle()\n            Ang[2] = Ang[2] - Ent:GetAngles()[2]\n            Ang[2] = Ang[2] + 90\n            Ang[1] = Ang[1] - Ent:GetAngles()[3]\n            Ang:Normalize()\n            Text = \"Pitch: \" .. math.Round(Ang[1]) .. \" Yaw: \" .. math.Round(Ang[2]) .. \" Roll: \" .. (D-A)\n            Ent:ApplyAngForce(Angle(RollMul*(D-A),YawMul*Ang[2],PitchMul*Ang[1]))\n            Ent:ApplyForceCenter(-Ent:GetRight()*ThrstMul*Throttle)\n        end\n        NetworkVars()\n    end)\n    \n\n\nelse\n    Driver = nil\n    Text = \"\"\n    hook.Add(\"net\",\"HobNet\",function(Name)\n        if Name == \"Throttle\" then\n            Throttle = net.ReadDouble()\n            Driver = entities.entity(net.ReadInt(8))\n            Text = net.ReadString()\n        end\n    end)\n    Throttle = 0.5\n    hook.Add(\"HUDPaint\",\"HobPaint\",function() \n        if entities.player() == Driver then\n            local w,h = surface.ScreenW(), surface.ScreenH()\n            surface.SetDrawColor(Color(200,200,200))\n            surface.DrawRect(21,h-160,290,30)\n            surface.SetDrawColor(Color(100,100,100))\n            surface.DrawRect(23,h-158,286*Throttle,26)\n            surface.SetTextColor(Color(255,255,255))\n            surface.SetTextPos(23,h-175)\n            surface.DrawText(Text)\n        end\n    end)\nend"},"12":{"filename":"/projects/plane/plane.txt","code":"--@name Plane\n--@author \n--@shared\n\nif SERVER then\n    \n    Throttle = 0\n    W = 0\n    A = 0\n    S = 0\n    D = 0\n    Shift = 0\n    Space = 0\n    Seat = 559\n    Driver = entities.entity(Seat):GetDriver() \n    Mass = 0\n    for K,V in pairs(entities.self():GetAllConstrainedEnts()) do\n        Mass = Mass + V:GetMass()\n    end\n    Text = \"\"\n    Offset = Vector(0,0,0)\n    function NetworkVars()\n        if net.CanSend() then\n            net.Start(\"Throttle\")\n            net.WriteDouble(Throttle)\n            if Driver:IsValid() then\n                net.WriteInt(Driver:EntIndex(),8)\n            else\n                net.WriteInt(-1,8)\n            end\n            net.WriteString(Text)\n            net.Send()\n        end\n    end\n    \n    hook.Add(\"KeyPress\",\"HobPress\",function(ply,key)\n        if ply == Driver then\n            if key == 8 then\n                W = 1\n            elseif key == 512 then\n                A = 1\n            elseif key == 16 then\n                S = 1\n            elseif key == 1024 then\n                D = 1\n            elseif key == 131072 then\n                Shift = 1\n            elseif key == 2 then\n                Space = 1\n            end\n        end\n    end)\n    hook.Add(\"KeyRelease\",\"HobRelease\",function(ply,key)\n        if ply == Driver then\n            if key == 8 then\n                W = 0\n            elseif key == 512 then\n                A = 0\n            elseif key == 16 then\n                S = 0\n            elseif key == 1024 then\n                D = 0\n            elseif key == 131072 then\n                Shift = 0\n            elseif key == 2 then\n                Space = 0\n            end\n        end\n    end)\n    \n    Holo = holograms.create(entities.self():GetPos(),Angle(0,0,0),\"models/hunter/blocks/cube025x025x025.mdl\",Vector(1,1,1))\n    Holo:SetColor(Color(255,0,0))\n    hook.Add(\"Think\",\"HobThink\",function() \n        \n        local ThrstMul = 50 * Mass\n        local PitchMul = 5 * Mass\n        local YawMul = 5 * Mass\n        local RollMul = 500 * Mass\n        \n        --internal vars\n        local Ent = entities.self():IsWeldedTo()\n        Driver = entities.entity(Seat):GetDriver() \n        Throttle = math.Clamp(Throttle + W/100 - S/100, 0 , 1)\n        if Driver:IsValid() then \n            Holo:setPos(Driver:EyePos() + Driver:EyeAngles():Forward()*500 +Offset)\n            Ang = (Driver:EyePos() - Holo:GetPos()):Angle()\n            Ang[2] = Ang[2] - Ent:GetAngles()[2]\n            Ang[2] = Ang[2] + 90\n            Ang[1] = Ang[1] - Ent:GetAngles()[3]\n            Ang:Normalize()\n            Text = \"Pitch: \" .. math.Round(Ang[1]) .. \" Yaw: \" .. math.Round(Ang[2]) .. \" Roll: \" .. (D-A)\n            Ent:ApplyAngForce(Angle(RollMul*(D-A),YawMul*Ang[2],PitchMul*Ang[1]))\n            Ent:ApplyForceCenter(-Ent:GetRight()*ThrstMul*Throttle)\n        end\n        NetworkVars()\n    end)\n    \n\n\nelse\n    Driver = nil\n    Text = \"\"\n    hook.Add(\"net\",\"HobNet\",function(Name)\n        if Name == \"Throttle\" then\n            Throttle = net.ReadDouble()\n            Driver = entities.entity(net.ReadInt(8))\n            Text = net.ReadString()\n        end\n    end)\n    Throttle = 0.5\n    hook.Add(\"HUDPaint\",\"HobPaint\",function() \n        if entities.player() == Driver then\n            local w,h = surface.ScreenW(), surface.ScreenH()\n            surface.SetDrawColor(Color(200,200,200))\n            surface.DrawRect(21,h-160,290,30)\n            surface.SetDrawColor(Color(100,100,100))\n            surface.DrawRect(23,h-158,286*Throttle,26)\n            surface.SetTextColor(Color(255,255,255))\n            surface.SetTextPos(23,h-175)\n            surface.DrawText(Text)\n        end\n    end)\nend"},"selectedTab":12}