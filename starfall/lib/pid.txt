--@name pid
--@author Hobnob
--@shared

PID = {}
PID.__index = PID

setmetatable(PID, { 
    __call = function(cls,...)
        local self = setmetatable({},cls)
        self:_init(...)
        return self
    end,
})

function PID:_init(P,I,D,Min,Max,Target) --min max are for I, smaller ranges increase reaction time but decrease maximum change speed. 
    self.P = P
    self.I = I
    self.D = D
    self.Min = Min
    self.Max = Max
    self.Target = Target
    self.T = CurTime()
    self.Error = 0
    self.Pt = 0
    self.It = 0
    self.Dt = 0
end

--accessors or gtfo. 
function PID:SetP(P) self.P = P end
function PID:GetP() return self.P end

function PID:SetI(I) self.I = I end
function PID:GetI() return self.I end

function PID:SetD(D) self.D = D end
function PID:GetD() return self.D end

function PID:SetMin(Min) self.Min = Min end
function PID:GetMin() return self.Min end

function PID:SetMax(Max) self.Max = Max end
function PID:GetMax() return self.Max end

function PID:SetTarget(Target) self.Target = Target end
function PID:GetTarget() return self.Target end

function PID:Run(Current)
    self.DeltaT = CurTime() - self.T
    self.T = CurTime()
    self.DeltaError = (self.Target - Current) - self.Error
    self.Error = (self.Target - Current)
    self.Pt = self.P * self.Error
    self.Dt = self.D*self.DeltaError/self.DeltaT
    self.It = math.Clamp(self.It + self.I * self.Error * self.DeltaT,self.Min,self.Max)
    return self.Pt + self.It + self.Dt
end