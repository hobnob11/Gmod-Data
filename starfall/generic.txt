--@name 
--@author 

FlatSurfaceDynamics = true
Lift = "lift_normal"

 function Think()
	local physobj = entities.self()
	if !physobj:IsValid() then return end
	
	local curvel = physobj:GetVelocity()
	local curup = physobj:GetForward()
	
	local vec1 = curvel
	local vec2 = curup
	vec1 = vec1 - (vec1:Dot(vec2))*vec2*2
	local sped = vec1:Length()
	
	local finalvec = curvel
	local modf = math.abs(curup:DotProduct(curvel:GetNormalized()))
	local nvec = (curup:DotProduct(curvel:GetNormalized()))
	
	if (FlatSurfaceDynamics == 1) then
		
		if nvec > 0 then
			vec1 = vec1 + (curup * 10)
		else
			vec1 = vec1 + (curup * -10)
		end
		
		finalvec = vec1:GetNormalized() * (math.pow(sped, modf) - 1)
		finalvec = finalvec:GetNormalized()
		finalvec = (finalvec * self.efficiency) + curvel
		
	end
	
	if (Lift != "lift_none") then
		if (Lift == "lift_normal") then
			local liftmul = 1 - math.abs(nvec)
			finalvec = finalvec + (curup * liftmul * curvel:Length() * self.efficiency) / 700
		else
			local liftmul = (nvec / math.abs(nvec)) - nvec
			finalvec = finalvec + (curup * curvel:Length() * self.efficiency * liftmul) / 700
		end
	end
	
	finalvec = finalvec:GetNormalized()
	finalvec = finalvec * curvel:Length()
	
	physobj:SetVelocity(finalvec)
	
	return true 
 end

hook.Add("Think","HobThink",Think())